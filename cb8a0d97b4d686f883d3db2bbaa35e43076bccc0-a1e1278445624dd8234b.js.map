{"version":3,"sources":["webpack:///./node_modules/react-instantsearch-core/dist/es/core/highlight.js","webpack:///./src/components/TypeTag/index.tsx","webpack:///./node_modules/slugify/slugify.js","webpack:///./src/components/Grid/index.tsx","webpack:///./src/components/ResourceCard/index.tsx","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHighlight.js","webpack:///./node_modules/pluralize/pluralize.js","webpack:///./src/helpers/utils.js"],"names":["HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","parseHighlightedAttribute","_ref","preTag","postTag","_ref$highlightedValue","highlightedValue","splitByPreTag","split","firstValue","shift","elements","value","isHighlighted","forEach","push","splitByPostTag","parseAlgoliaHit","_ref2","_ref2$preTag","_ref2$postTag","highlightProperty","attribute","hit","Error","highlightObject","Array","isArray","map","item","colourMap","report","insight","infographic","video","statistic","tool","TypeTag","string","type","sx","display","mb","rem","padding","bg","pluralize","singular","toLowerCase","variant","charAt","toUpperCase","slice","factory","charMap","JSON","parse","locales","replace","options","locale","replacement","slug","reduce","result","ch","remove","trim","RegExp","lower","strict","extend","customMap","key","module","exports","Cell","gridColumn","gridRow","styles","children","CustomHighlight","connectHighlight","parsedHit","highlight","part","index","borderBottom","ResourceCard","props","borderTop","h1","textDecoration","textDecorationColor","mt","to","slugify","formatCraftType","static","title","width","height","src","frameBorder","allow","allowFullScreen","img","alt","description","trimSentence","socialImpacts","length","t","PlainCard","link","label","size","industries","_ref$preTag","_ref$postTag","displayName","propTypes","getProvidedProps","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","rule","restoreCase","word","token","substr","interpolate","str","args","match","arguments","sanitizeWord","rules","hasOwnProperty","len","test","replaceWord","replaceMap","keepMap","checkWord","bool","count","inclusive","plural","isPlural","isSingular","addPluralRule","addSingularRule","addUncountableRule","addIrregularRule","single","kebabize","letter","idx","join","cutOff","trimmedString","Math","min","lastIndexOf"],"mappings":"6FAAA,4HAKWA,EAAiB,CAC1BC,gBAAiB,6BACjBC,iBAAkB,+BAYpB,SAASC,EAA0BC,GACjC,IAAIC,EAASD,EAAKC,OACdC,EAAUF,EAAKE,QACfC,EAAwBH,EAAKI,iBAE7BC,QAD6C,IAA1BF,EAAmC,GAAKA,GAC1BG,MAAML,GACvCM,EAAaF,EAAcG,QAC3BC,EAA0B,KAAfF,EAAoB,GAAK,CAAC,CACvCG,MAAOH,EACPI,eAAe,IAGjB,GAAIT,IAAYD,EAAQ,CACtB,IAAIU,GAAgB,EACpBN,EAAcO,SAAQ,SAAUN,GAC9BG,EAASI,KAAK,CACZH,MAAOJ,EACPK,cAAeA,IAEjBA,GAAiBA,UAGnBN,EAAcO,SAAQ,SAAUN,GAC9B,IAAIQ,EAAiBR,EAAMA,MAAMJ,GACjCO,EAASI,KAAK,CACZH,MAAOI,EAAe,GACtBH,eAAe,IAGS,KAAtBG,EAAe,IACjBL,EAASI,KAAK,CACZH,MAAOI,EAAe,GACtBH,eAAe,OAMvB,OAAOF,EAoBF,SAASM,EAAgBC,GAC9B,IAAIC,EAAeD,EAAMf,OACrBA,OAA0B,IAAjBgB,EAA0B,OAASA,EAC5CC,EAAgBF,EAAMd,QACtBA,OAA4B,IAAlBgB,EAA2B,QAAUA,EAC/CC,EAAoBH,EAAMG,kBAC1BC,EAAYJ,EAAMI,UAClBC,EAAML,EAAMK,IAChB,IAAKA,EAAK,MAAM,IAAIC,MAAM,gDAC1B,IAAIC,EAAkB,YAAkBF,EAAIF,GAAoBC,IAAc,GAE9E,OAAII,MAAMC,QAAQF,GACTA,EAAgBG,KAAI,SAAUC,GACnC,OAAO5B,EAA0B,CAC/BE,OAAQA,EACRC,QAASA,EACTE,iBAAkBuB,EAAKjB,WAKtBX,EAA0B,CAC/BE,OAAQA,EACRC,QAASA,EACTE,iBAAkBmB,EAAgBb,U,kCCrGtC,iDAcA,IAAMkB,EAAY,CAChBC,OAAQ,UACRC,QAAS,YACTC,YAAa,UACbC,MAAO,SACPC,UAAW,UACX,mBAAoB,WACpBC,KAAM,YAmBOC,IAhBC,SAAC,GAA6B,IAlBfC,EAkBZC,EAA2B,EAA3BA,KACjB,OACE,mBACEC,GAAI,CACFC,QAAS,eACTC,GAAIC,YAAI,GACRC,QAAS,UACTC,GAAIf,EAAUgB,IAAUC,SAASR,EAAKS,iBAAmB,UACzDC,QAAS,wBAGVH,IAAUC,UA7BcT,EA6BiBC,GA5BhCW,OAAO,GAAGC,cAAgBb,EAAOc,MAAM,O,qBCKvD,IAAuBC,EAZvB,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAIeA,EAWH,WAClB,IAAIC,EAAUC,KAAKC,MAAM,i3IACrBC,EAAUF,KAAKC,MAAM,4BAEzB,SAASE,EAAQpB,EAAQqB,GACvB,GAAsB,iBAAXrB,EACT,MAAM,IAAId,MAAM,qCAMlB,IAAIoC,EAASH,GAHbE,EAA6B,iBAAZA,EAAuB,CACtCE,YAAaF,GACXA,GAAW,IACcC,SAAW,GACpCC,EAAcF,EAAQE,aAAe,IACrCC,EAAOxB,EAAO9B,MAAM,IACvBuD,QAAO,SAAUC,EAAQC,GACxB,OAAOD,GAAUJ,EAAOK,IAAOX,EAAQW,IAAOA,KAC7C,IACFP,QAAQC,EAAQO,QAAU,2BAA4B,IACtDC,OAEAT,QAAQ,IAAIU,OAAO,OAASP,EAAc,KAAM,KAAMA,GAWvD,OATIF,EAAQU,QACVP,EAAOA,EAAKd,eAGVW,EAAQW,SAEVR,EAAOA,EAAKJ,QAAQ,IAAIU,OAAO,cAAgBP,EAAc,IAAK,KAAM,KAGnEC,EAST,OANAJ,EAAQa,OAAS,SAAUC,GACzB,IAAK,IAAIC,KAAOD,EACdlB,EAAQmB,GAAOD,EAAUC,IAItBf,GAlDLgB,EAAOC,QAAUtB,IACjBqB,EAAOC,QAAiB,QAAItB,K,iJCJzB,IA+BMuB,EAAO,SAAC,GAAD,IAClBC,EADkB,EAClBA,WACAC,EAFkB,EAElBA,QACAC,EAHkB,EAGlBA,OACAC,EAJkB,EAIlBA,SAJkB,OAMlB,mBACExC,GAAE,eACAqC,WAAYA,GAAc,CAAC,SAAU,WACrCC,QAASA,GAAW,CAAC,YAClBC,IAGJC,I,iFCdCC,EAAkBC,aA3BN,SAAC,GAAkC,IAC7CC,GAAYC,EADiC,EAAhCA,WACS,CAC1B/D,kBAAmB,mBACnBC,UAHiD,EAArBA,UAI5BC,IAJiD,EAAVA,MAOzC,OACE,wBACG4D,EAAUvD,KAAI,SAACyD,EAAMC,GAAP,OACbD,EAAKxE,cACH,oBACE4D,IAAKa,EACL9C,GAAI,CACFK,GAAI,UACJ0C,aAAc,uBAGfF,EAAKzE,OAGR,oBAAM6D,IAAKa,GAAQD,EAAKzE,cA6HnB4E,IArHM,SAACC,GAAD,OACnB,YAAC,EAAD,KACE,uBACEjD,GAAI,CACFE,GAAI,CAACC,YAAI,IAAK,KAAMA,YAAI,KACxB+C,UAAW,qBACXC,GAAI,CACFC,eAAgB,YAChBC,oBAAqB,QACrB,UAAW,CACTA,oBAAqB,YAK3B,mBACErD,GAAI,CACFsD,GAAI,CAACnD,YAAI,IAAK,KAAMA,YAAI,KACxBD,GAAIC,YAAI,KAGV,YAACN,EAAA,EAAD,CAASE,KAAMkD,EAAMlE,IAAIgB,KAAKS,iBAGhC,YAAC,IAAD,CACE+C,GAAOC,IACLlD,IAAUC,SAASkD,YAAgBR,EAAMlE,IAAIgB,QAC7CS,cAFA,IAEiByC,EAAMlE,IAAIuC,MAE7B,kBACEtB,GAAI,CACFS,QAAS,sBACTP,GAAI,CAACC,YAAI,IAAK,KAAMA,YAAI,KACxBmD,GAAI,CAACnD,YAAI,IAAK,KAAMA,YAAI,OAGzB8C,EAAMS,OACLT,EAAMlE,IAAI4E,MAEV,YAAClB,EAAD,CAAiB3D,UAAU,QAAQC,IAAKkE,EAAMlE,QAKnDkE,EAAMlE,IAAIW,OACT,uBACE,sBACEkE,MAAM,OACNC,OAAO,MACPC,IAAKb,EAAMlE,IAAIW,MACfqE,YAAY,IACZC,MAAM,2FACNC,iBAAe,KAIpBhB,EAAMlE,IAAImF,KACT,uBACE,mBACEJ,IAAKb,EAAMlE,IAAImF,IAAIJ,IACnBK,IAAKlB,EAAMlE,IAAImF,IAAIC,IACnBnE,GAAI,CACF4D,MAAO,WAKdX,EAAMlE,IAAIqF,aACU,UAAnBnB,EAAMlE,IAAIgB,MACS,gBAAnBkD,EAAMlE,IAAIgB,MACR,iBACEC,GAAI,CACFS,QAAS,2BAGV4D,YAAapB,EAAMlE,IAAIqF,YAAa,MAG3C,kBACEpE,GAAI,CACFsD,GAAInD,YAAI,MAGT8C,EAAMlE,IAAIuF,cAAcC,OACrBtB,EAAMlE,IAAIuF,cACP1D,MAAM,EAAG,GACTxB,KAAI,SAACoF,GAAD,OACH,YAACC,EAAA,EAAD,CACEC,KAAI,0BAA4BlB,IAC9BgB,EAAEhE,cAAcU,QAAQ,YAAa,KAEvCyD,MAAOH,EACPI,KAAK,KACL3C,IAAKuC,OAGX,KAEHvB,EAAMlE,IAAI8F,WAAWN,OAClBtB,EAAMlE,IAAI8F,WACPjE,MAAM,EAAG,GACTxB,KAAI,SAACoF,GAAD,OACH,YAACC,EAAA,EAAD,CACEC,KAAI,sBAAwBlB,IAC1BgB,EAAEhE,cAAcU,QAAQ,YAAa,KAEvCyD,MAAOH,EACPI,KAAK,KACL3C,IAAKuC,OAGX,U,kCC1JZ,4BAGI5B,EAAY,SAAmBlF,GACjC,IAAIoB,EAAYpB,EAAKoB,UACjBC,EAAMrB,EAAKqB,IACXF,EAAoBnB,EAAKmB,kBACzBiG,EAAcpH,EAAKC,OACnBA,OAAyB,IAAhBmH,EAAyB,IAAevH,gBAAkBuH,EACnEC,EAAerH,EAAKE,QACpBA,OAA2B,IAAjBmH,EAA0B,IAAevH,iBAAmBuH,EAC1E,OAAO,YAAgB,CACrBjG,UAAWA,EACXD,kBAAmBA,EACnBE,IAAKA,EACLpB,OAAQA,EACRC,QAASA,KAuDE,gBAAgB,CAC7BoH,YAAa,qBACbC,UAAW,GACXC,iBAAkB,WAChB,MAAO,CACLtC,UAAWA,O,qBC5EjB,EAAQ,QAER,EAAQ,QAER,EAAQ,QAOJV,EAAOC,QAUF,WAGP,IAAIgD,EAAc,GACdC,EAAgB,GAChBC,EAAe,GACfC,EAAmB,GACnBC,EAAmB,GAQvB,SAASC,EAAaC,GACpB,MAAoB,iBAATA,EACF,IAAI7D,OAAO,IAAM6D,EAAO,IAAK,KAG/BA,EAYT,SAASC,EAAYC,EAAMC,GAEzB,OAAID,IAASC,EAAcA,EAEvBD,IAASA,EAAKnF,cAAsBoF,EAAMpF,cAE1CmF,IAASA,EAAKhF,cAAsBiF,EAAMjF,cAE1CgF,EAAK,KAAOA,EAAK,GAAGhF,cACfiF,EAAMlF,OAAO,GAAGC,cAAgBiF,EAAMC,OAAO,GAAGrF,cAIlDoF,EAAMpF,cAWf,SAASsF,EAAYC,EAAKC,GACxB,OAAOD,EAAI7E,QAAQ,gBAAgB,SAAU+E,EAAOnD,GAClD,OAAOkD,EAAKlD,IAAU,MAY1B,SAAS5B,EAAQyE,EAAMF,GACrB,OAAOE,EAAKzE,QAAQuE,EAAK,IAAI,SAAUQ,EAAOnD,GAC5C,IAAItB,EAASsE,EAAYL,EAAK,GAAIS,WAElC,OACSR,EADK,KAAVO,EACiBN,EAAK7C,EAAQ,GAGfmD,EAHmBzE,MAgB1C,SAAS2E,EAAaP,EAAOD,EAAMS,GAEjC,IAAKR,EAAMrB,QAAUc,EAAagB,eAAeT,GAC/C,OAAOD,EAKT,IAFA,IAAIW,EAAMF,EAAM7B,OAET+B,KAAO,CACZ,IAAIb,EAAOW,EAAME,GACjB,GAAIb,EAAK,GAAGc,KAAKZ,GAAO,OAAOzE,EAAQyE,EAAMF,GAG/C,OAAOE,EAYT,SAASa,EAAYC,EAAYC,EAASN,GACxC,OAAO,SAAUT,GAEf,IAAIC,EAAQD,EAAKnF,cAEjB,OAAIkG,EAAQL,eAAeT,GAClBF,EAAYC,EAAMC,GAIvBa,EAAWJ,eAAeT,GACrBF,EAAYC,EAAMc,EAAWb,IAI/BO,EAAaP,EAAOD,EAAMS,IAQrC,SAASO,EAAUF,EAAYC,EAASN,EAAOQ,GAC7C,OAAO,SAAUjB,GACf,IAAIC,EAAQD,EAAKnF,cACjB,QAAIkG,EAAQL,eAAeT,KACvBa,EAAWJ,eAAeT,IACvBO,EAAaP,EAAOA,EAAOQ,KAAWR,GAajD,SAAStF,EAAUqF,EAAMkB,EAAOC,GAE9B,OAAQA,EAAYD,EAAQ,IAAM,KADP,IAAVA,EAAcvG,EAAUC,SAASoF,GAAQrF,EAAUyG,OAAOpB,IA2H7E,OAjHArF,EAAUyG,OAASP,EAAYjB,EAAkBD,EAAkBH,GAOnE7E,EAAU0G,SAAWL,EAAUpB,EAAkBD,EAAkBH,GAOnE7E,EAAUC,SAAWiG,EAAYlB,EAAkBC,EAAkBH,GAOrE9E,EAAU2G,WAAaN,EAAUrB,EAAkBC,EAAkBH,GAQrE9E,EAAU4G,cAAgB,SAAUzB,EAAMpE,GACxC8D,EAAY5G,KAAK,CAACiH,EAAaC,GAAOpE,KAUxCf,EAAU6G,gBAAkB,SAAU1B,EAAMpE,GAC1C+D,EAAc7G,KAAK,CAACiH,EAAaC,GAAOpE,KAS1Cf,EAAU8G,mBAAqB,SAAUzB,GACnB,iBAATA,GAMXrF,EAAU4G,cAAcvB,EAAM,MAC9BrF,EAAU6G,gBAAgBxB,EAAM,OAN9BN,EAAaM,EAAKnF,gBAAiB,GAgBvCF,EAAU+G,iBAAmB,SAAUC,EAAQP,GAC7CA,EAASA,EAAOvG,cAChB8G,EAASA,EAAO9G,cAChB+E,EAAiB+B,GAAUP,EAC3BzB,EAAiByB,GAAUO,GAO7B,CACA,CAAC,IAAK,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,QAAS,CAAC,MAAO,QAAS,CAAC,OAAQ,QAAS,CAAC,SAAU,aAAc,CAAC,WAAY,cAAe,CAAC,SAAU,cAAe,CAAC,UAAW,cAAe,CAAC,UAAW,cAAe,CAAC,WAAY,cAAe,CAAC,KAAM,OAAQ,CAAC,MAAO,QAAS,CAAC,MAAO,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAC5T,CAAC,OAAQ,UAAW,CAAC,QAAS,WAAY,CAAC,UAAW,aAAc,CAAC,UAAW,aAAc,CAAC,UAAW,aAC1G,CAAC,QAAS,UAAW,CAAC,SAAU,WAChC,CAAC,SAAU,YAAa,CAAC,QAAS,WAAY,CAAC,QAAS,WAAY,CAAC,QAAS,WAAY,CAAC,SAAU,YAAa,CAAC,WAAY,cAC/H,CAAC,KAAM,QAAS,CAAC,MAAO,QAAS,CAAC,MAAO,QAAS,CAAC,MAAO,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,WAAY,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,SAAU,WAAY,CAAC,UAAW,YAAa,CAAC,WAAY,cAAchJ,SAAQ,SAAUmH,GAChY,OAAOnF,EAAU+G,iBAAiB5B,EAAK,GAAIA,EAAK,OAMlD,CAAC,CAAC,OAAQ,KAAM,CAAC,qBAAsB,MAAO,CAAC,kBAAmB,MAAO,CAAC,gBAAiB,QAAS,CAAC,qCAAsC,QAAS,CAAC,eAAgB,OAAQ,CAAC,yCAA0C,MAAO,CAAC,4FAA6F,OAAQ,CAAC,gCAAiC,QAAS,CAAC,2BAA4B,QAAS,CAAC,iBAAkB,SAAU,CAAC,wHAAyH,OAAQ,CAAC,qGAAsG,OAAQ,CAAC,QAAS,OAAQ,CAAC,2CAA4C,WAAY,CAAC,oBAAqB,SAAU,CAAC,uBAAwB,SAAU,CAAC,oBAAqB,QAAS,CAAC,gDAAiD,UAAW,CAAC,gCAAiC,SAAU,CAAC,sBAAuB,UAAW,CAAC,oBAAqB,SAAU,CAAC,SAAU,MAAO,CAAC,WAAY,OAAQ,CAAC,OAAQ,QAAQnH,SAAQ,SAAUmH,GACrkC,OAAOnF,EAAU4G,cAAczB,EAAK,GAAIA,EAAK,OAM/C,CAAC,CAAC,MAAO,IAAK,CAAC,SAAU,MAAO,CAAC,gEAAiE,QAAS,CAAC,kCAAmC,OAAQ,CAAC,QAAS,KAAM,CAAC,uFAAwF,QAAS,CAAC,oBAAqB,QAAS,CAAC,uBAAwB,UAAW,CAAC,sBAAuB,MAAO,CAAC,2FAA4F,MAAO,CAAC,qEAAsE,SAAU,CAAC,iCAAkC,MAAO,CAAC,oBAAqB,QAAS,CAAC,4FAA6F,QAAS,CAAC,yGAA0G,QAAS,CAAC,8FAA+F,QAAS,CAAC,0BAA2B,OAAQ,CAAC,+BAAgC,QAAS,CAAC,sBAAuB,QAAS,CAAC,oBAAqB,UAAW,CAAC,eAAgB,MAAO,CAAC,YAAa,MAAO,CAAC,QAAS,QAAQnH,SAAQ,SAAUmH,GAC5oC,OAAOnF,EAAU6G,gBAAgB1B,EAAK,GAAIA,EAAK,OAMjD,CACA,YAAa,SAAU,SAAU,MAAO,WAAY,UAAW,OAAQ,YAAa,QAAS,YAAa,QAAS,QAAS,QAAS,QAAS,UAAW,SAAU,OAAQ,OAAQ,UAAW,QAAS,WAAY,MAAO,WAAY,cAAe,QAAS,SAAU,WAAY,YAAa,MAAO,SAAU,YAAa,YAAa,YAAa,WAAY,WAAY,MAAO,UAAW,UAAW,WAAY,WAAY,eAAgB,SAAU,SAAU,YAAa,WAAY,YAAa,cAAe,QAAS,UAAW,QAAS,SAAU,aAAc,YAAa,WAAY,OAAQ,QAAS,OAAQ,QAAS,QAAS,MAAO,QAAS,OAAQ,OAAQ,YAAa,OAAQ,WAAY,SAAU,SAAU,YAAa,WAAY,OAAQ,WAAY,OAAQ,SAAU,WAAY,SAAU,SAAU,WAAY,SAAU,WAAY,UAAW,QAAS,QAAS,SAAU,UAAW,iBAAkB,QAAS,OAAQ,SAAU,UAAW,UAAW,aAAc,WAAY,MAAO,eACp+B,gBACA,SACA,SACA,YAAa,WACb,QACA,WAAWnH,QAAQgC,EAAU8G,oBACtB9G,EAnSYA,I,gKCXRiH,EAAW,SAACxB,GACvB,OAAOA,EACJ/H,MAAM,IACNoB,KAAI,SAACoI,EAAQC,GACZ,OAAOD,EAAO7G,gBAAkB6G,GACjB,IAARC,EAAY,IAAM,IAAKD,EAAOhH,cACjCgH,KAELE,KAAK,KAGGrD,EAAe,SAAC0B,EAAK4B,GAChC,GAAI5B,EAAIxB,OAASoD,EAAQ,CAEvB,IAAIC,EAAgB7B,EAAIF,OAAO,EAAG8B,GAOlC,OAJAC,EAAgBA,EAAc/B,OAC5B,EACAgC,KAAKC,IAAIF,EAAcrD,OAAQqD,EAAcG,YAAY,QAEpC,MAEvB,OAAOhC,GAKEtC,EAAkB,SAAC1D,GAAD,OAAUA,EACvCA,EACGmB,QAAQ,WAAY,OACpBA,QAAQ,MAAM,SAAS6E,GACtB,OAAOA,EAAIpF,iBAEf","file":"cb8a0d97b4d686f883d3db2bbaa35e43076bccc0-a1e1278445624dd8234b.js","sourcesContent":["import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.regexp.split\";\nimport { getPropertyByPath } from './utils';\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n      postTag = _ref.postTag,\n      _ref$highlightedValue = _ref.highlightedValue,\n      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\n\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n      _ref2$postTag = _ref2.postTag,\n      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n      highlightProperty = _ref2.highlightProperty,\n      attribute = _ref2.attribute,\n      hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { rem } from \"@src/theme\";\n\nimport pluralize from \"pluralize\";\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\ninterface ComponentProps {\n  type: string;\n}\n\nconst colourMap = {\n  report: \"csiBlue\",\n  insight: \"csiYellow\",\n  infographic: \"csiTeal\",\n  video: \"csiRed\",\n  statistic: \"csiPink\",\n  \"academic article\": \"csiBeige\",\n  tool: \"csiGreen\",\n};\n\nconst TypeTag = ({ type }: ComponentProps) => {\n  return (\n    <div\n      sx={{\n        display: \"inline-block\",\n        mb: rem(4),\n        padding: \"2px 8px\",\n        bg: colourMap[pluralize.singular(type.toLowerCase())] || \"csiBlue\",\n        variant: \"typography.headingS\",\n      }}\n    >\n      {pluralize.singular(capitalizeFirstLetter(type))}\n    </div>\n  );\n};\n\nexport default TypeTag;\n","require(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n;\n\n(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory();\n    module.exports['default'] = factory();\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n      define(factory);\n    } else {\n      root[name] = factory();\n    }\n})('slugify', this, function () {\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"%\":\"percent\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ľ\":\"L\",\"ľ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ŕ\":\"R\",\"ŕ\":\"r\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ŵ\":\"W\",\"ŵ\":\"w\",\"Ŷ\":\"Y\",\"ŷ\":\"y\",\"Ÿ\":\"Y\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"ѝ\":\"u\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"Ғ\":\"GH\",\"ғ\":\"gh\",\"Қ\":\"KH\",\"қ\":\"kh\",\"Ң\":\"NG\",\"ң\":\"ng\",\"Ү\":\"UE\",\"ү\":\"ue\",\"Ұ\":\"U\",\"ұ\":\"u\",\"Һ\":\"H\",\"һ\":\"h\",\"Ә\":\"AE\",\"ә\":\"ae\",\"Ө\":\"OE\",\"ө\":\"oe\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"Ẁ\":\"W\",\"ẁ\":\"w\",\"Ẃ\":\"W\",\"ẃ\":\"w\",\"Ẅ\":\"W\",\"ẅ\":\"w\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₸\":\"kazakhstani tenge\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"₿\":\"bitcoin\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}');\n  var locales = JSON.parse('{\"vi\":{\"Đ\":\"D\",\"đ\":\"d\"}}');\n\n  function replace(string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected');\n    }\n\n    options = typeof options === 'string' ? {\n      replacement: options\n    } : options || {};\n    var locale = locales[options.locale] || {};\n    var replacement = options.replacement || '-';\n    var slug = string.split('') // replace characters based on charMap\n    .reduce(function (result, ch) {\n      return result + (locale[ch] || charMap[ch] || ch);\n    }, '') // remove not allowed characters\n    .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]+/g, '') // trim leading/trailing spaces\n    .trim() // convert spaces to replacement character\n    // also remove duplicates of the replacement character\n    .replace(new RegExp('[\\\\s' + replacement + ']+', 'g'), replacement);\n\n    if (options.lower) {\n      slug = slug.toLowerCase();\n    }\n\n    if (options.strict) {\n      // remove anything besides letters, numbers, and the replacement char\n      slug = slug.replace(new RegExp('[^a-zA-Z0-9' + replacement + ']', 'g'), '');\n    }\n\n    return slug;\n  }\n\n  replace.extend = function (customMap) {\n    for (var key in customMap) {\n      charMap[key] = customMap[key];\n    }\n  };\n\n  return replace;\n});","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { GRID_GUTTERS } from \"@src/theme\";\n\ninterface GridComponentProps {\n  gridTemplateColumns?: string[];\n  gridRowGap?: string[];\n  gridColumnGap?: string[];\n  children: React.ReactNode;\n  styles?: Object;\n}\nexport const Grid = ({\n  gridTemplateColumns,\n  gridRowGap,\n  gridColumnGap,\n  styles,\n  ...props\n}: GridComponentProps) => {\n  return (\n    <div\n      sx={{\n        display: \"grid\",\n        gridTemplateColumns: gridTemplateColumns || [\n          \"repeat(4, 1fr)\",\n          \"repeat(12, 1fr)\",\n        ],\n        gridColumnGap: gridColumnGap ? gridColumnGap : GRID_GUTTERS,\n        gridRowGap: gridRowGap ? gridRowGap : [],\n        ...styles,\n      }}\n      {...props}\n    ></div>\n  );\n};\n\ninterface CellComponentProps {\n  gridColumn?: string[];\n  gridRow?: string[];\n  styles?: Object;\n  children?: React.ReactNode;\n}\n\nexport const Cell = ({\n  gridColumn,\n  gridRow,\n  styles,\n  children,\n}: CellComponentProps) => (\n  <div\n    sx={{\n      gridColumn: gridColumn || [\"span 4\", \"span 12\"],\n      gridRow: gridRow || [\"initial\"],\n      ...styles,\n    }}\n  >\n    {children}\n  </div>\n);\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport slugify from \"slugify\";\nimport { Cell } from \"@src/components/Grid\";\nimport { connectHighlight } from \"react-instantsearch-dom\";\nimport { rem } from \"@src/theme\";\nimport { Link } from \"gatsby\";\n\nimport PlainCard from \"@components/PlainCard\";\n\nimport TypeTag from \"@components/TypeTag\";\nimport { trimSentence, formatCraftType } from \"@src/helpers/utils\";\nimport pluralize from \"pluralize\";\nimport * as _ from \"lodash\";\nconst Highlight = ({ highlight, attribute, hit }) => {\n  const parsedHit = highlight({\n    highlightProperty: \"_highlightResult\",\n    attribute,\n    hit,\n  });\n\n  return (\n    <span>\n      {parsedHit.map((part, index) =>\n        part.isHighlighted ? (\n          <mark\n            key={index}\n            sx={{\n              bg: \"csiBlue\",\n              borderBottom: \"1px dashed #616161\",\n            }}\n          >\n            {part.value}\n          </mark>\n        ) : (\n          <span key={index}>{part.value}</span>\n        )\n      )}\n    </span>\n  );\n};\nconst CustomHighlight = connectHighlight(Highlight);\n\nconst ResourceCard = (props) => (\n  <Cell>\n    <article\n      sx={{\n        mb: [rem(40), null, rem(40)],\n        borderTop: \"2px dotted #616161\",\n        h1: {\n          textDecoration: \"underline\",\n          textDecorationColor: \"white\",\n          \"&:hover\": {\n            textDecorationColor: \"black\",\n          },\n        },\n      }}\n    >\n      <div\n        sx={{\n          mt: [rem(25), null, rem(40)],\n          mb: rem(4),\n        }}\n      >\n        <TypeTag type={props.hit.type.toLowerCase()} />\n      </div>\n\n      <Link\n        to={`${slugify(\n          pluralize.singular(formatCraftType(props.hit.type))\n        ).toLowerCase()}/${props.hit.slug}`}\n      >\n        <h1\n          sx={{\n            variant: \"typography.headingL\",\n            mb: [rem(10), null, rem(10)],\n            mt: [rem(10), null, rem(10)],\n          }}\n        >\n          {props.static ? (\n            props.hit.title\n          ) : (\n            <CustomHighlight attribute=\"title\" hit={props.hit} />\n          )}\n        </h1>\n      </Link>\n\n      {props.hit.video && (\n        <div>\n          <iframe\n            width=\"100%\"\n            height=\"169\"\n            src={props.hit.video}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      )}\n      {props.hit.img && (\n        <div>\n          <img\n            src={props.hit.img.src}\n            alt={props.hit.img.alt}\n            sx={{\n              width: \"100%\",\n            }}\n          />\n        </div>\n      )}\n      {props.hit.description &&\n        props.hit.type !== \"Video\" &&\n        props.hit.type !== \"Infographic\" && (\n          <p\n            sx={{\n              variant: \"typography.paragraphXS\",\n            }}\n          >\n            {trimSentence(props.hit.description, 120)}\n          </p>\n        )}\n      <ul\n        sx={{\n          mt: rem(24),\n        }}\n      >\n        {props.hit.socialImpacts.length\n          ? props.hit.socialImpacts\n              .slice(0, 1)\n              .map((t) => (\n                <PlainCard\n                  link={`explore/social-impacts/${slugify(\n                    t.toLowerCase().replace(/[^\\w\\s]/gi, \"\")\n                  )}`}\n                  label={t}\n                  size=\"xs\"\n                  key={t}\n                />\n              ))\n          : null}\n\n        {props.hit.industries.length\n          ? props.hit.industries\n              .slice(0, 1)\n              .map((t) => (\n                <PlainCard\n                  link={`explore/industries/${slugify(\n                    t.toLowerCase().replace(/[^\\w\\s]/gi, \"\")\n                  )}`}\n                  label={t}\n                  size=\"xs\"\n                  key={t}\n                />\n              ))\n          : null}\n      </ul>\n    </article>\n  </Cell>\n);\n\nexport default ResourceCard;\n","import createConnector from '../core/createConnector';\nimport { HIGHLIGHT_TAGS, parseAlgoliaHit } from '../core/highlight';\n\nvar highlight = function highlight(_ref) {\n  var attribute = _ref.attribute,\n      hit = _ref.hit,\n      highlightProperty = _ref.highlightProperty,\n      _ref$preTag = _ref.preTag,\n      preTag = _ref$preTag === void 0 ? HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,\n      _ref$postTag = _ref.postTag,\n      postTag = _ref$postTag === void 0 ? HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;\n  return parseAlgoliaHit({\n    attribute: attribute,\n    highlightProperty: highlightProperty,\n    hit: hit,\n    preTag: preTag,\n    postTag: postTag\n  });\n};\n/**\n * connectHighlight connector provides the logic to create an highlighter\n * component that will retrieve, parse and render an highlighted attribute\n * from an Algolia hit.\n * @name connectHighlight\n * @kind connector\n * @category connector\n * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const CustomHighlight = connectHighlight(\n *   ({ highlight, attribute, hit, highlightProperty }) => {\n *     const highlights = highlight({\n *       highlightProperty: '_highlightResult',\n *       attribute,\n *       hit\n *     });\n *\n *     return highlights.map(part => part.isHighlighted ? (\n *       <mark>{part.value}</mark>\n *     ) : (\n *       <span>{part.value}</span>\n *     ));\n *   }\n * );\n *\n * const Hit = ({ hit }) => (\n *   <p>\n *     <CustomHighlight attribute=\"name\" hit={hit} />\n *   </p>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaHighlighter',\n  propTypes: {},\n  getProvidedProps: function getProvidedProps() {\n    return {\n      highlight: highlight\n    };\n  }\n});","require(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n/* global define */\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n\n  function sanitizeRule(rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n\n\n  function restoreCase(word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token; // Lower cased words. E.g. \"hello\".\n\n    if (word === word.toLowerCase()) return token.toLowerCase(); // Upper cased words. E.g. \"WHISKY\".\n\n    if (word === word.toUpperCase()) return token.toUpperCase(); // Title cased words. E.g. \"Title\".\n\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    } // Lower cased words. E.g. \"test\".\n\n\n    return token.toLowerCase();\n  }\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n\n\n  function interpolate(str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n\n\n  function replace(word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n\n\n  function sanitizeWord(token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length; // Iterate over the sanitization rules and use the first one to match.\n\n    while (len--) {\n      var rule = rules[len];\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n\n\n  function replaceWord(replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase(); // Check against the keep object map.\n\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      } // Check against the replacement map for a direct word replacement.\n\n\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      } // Run all the rules against the word.\n\n\n      return sanitizeWord(token, word, rules);\n    };\n  }\n  /**\n   * Check if a word is part of the map.\n   */\n\n\n  function checkWord(replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n\n\n  function pluralize(word, count, inclusive) {\n    var pluralized = count === 1 ? pluralize.singular(word) : pluralize.plural(word);\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n\n\n  pluralize.plural = replaceWord(irregularSingles, irregularPlurals, pluralRules);\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n\n  pluralize.isPlural = checkWord(irregularSingles, irregularPlurals, pluralRules);\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n\n  pluralize.singular = replaceWord(irregularPlurals, irregularSingles, singularRules);\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n\n  pluralize.isSingular = checkWord(irregularPlurals, irregularSingles, singularRules);\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n\n\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n\n\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    } // Set singular and plural references for the word.\n\n\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n\n\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n  /**\n   * Irregular rules.\n   */\n\n\n  [// Pronouns.\n  ['I', 'we'], ['me', 'us'], ['he', 'they'], ['she', 'they'], ['them', 'them'], ['myself', 'ourselves'], ['yourself', 'yourselves'], ['itself', 'themselves'], ['herself', 'themselves'], ['himself', 'themselves'], ['themself', 'themselves'], ['is', 'are'], ['was', 'were'], ['has', 'have'], ['this', 'these'], ['that', 'those'], // Words ending in with a consonant and `o`.\n  ['echo', 'echoes'], ['dingo', 'dingoes'], ['volcano', 'volcanoes'], ['tornado', 'tornadoes'], ['torpedo', 'torpedoes'], // Ends with `us`.\n  ['genus', 'genera'], ['viscus', 'viscera'], // Ends with `ma`.\n  ['stigma', 'stigmata'], ['stoma', 'stomata'], ['dogma', 'dogmata'], ['lemma', 'lemmata'], ['schema', 'schemata'], ['anathema', 'anathemata'], // Other irregular rules.\n  ['ox', 'oxen'], ['axe', 'axes'], ['die', 'dice'], ['yes', 'yeses'], ['foot', 'feet'], ['eave', 'eaves'], ['goose', 'geese'], ['tooth', 'teeth'], ['quiz', 'quizzes'], ['human', 'humans'], ['proof', 'proofs'], ['carve', 'carves'], ['valve', 'valves'], ['looey', 'looies'], ['thief', 'thieves'], ['groove', 'grooves'], ['pickaxe', 'pickaxes'], ['passerby', 'passersby']].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n  /**\n   * Pluralization rules.\n   */\n\n  [[/s?$/i, 's'], [/[^\\u0000-\\u007F]$/i, '$0'], [/([^aeiou]ese)$/i, '$1'], [/(ax|test)is$/i, '$1es'], [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'], [/(e[mn]u)s?$/i, '$1s'], [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'], [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'], [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'], [/(seraph|cherub)(?:im)?$/i, '$1im'], [/(her|at|gr)o$/i, '$1oes'], [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'], [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'], [/sis$/i, 'ses'], [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'], [/([^aeiouy]|qu)y$/i, '$1ies'], [/([^ch][ieo][ln])ey$/i, '$1ies'], [/(x|ch|ss|sh|zz)$/i, '$1es'], [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'], [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'], [/(pe)(?:rson|ople)$/i, '$1ople'], [/(child)(?:ren)?$/i, '$1ren'], [/eaux$/i, '$0'], [/m[ae]n$/i, 'men'], ['thou', 'you']].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n  /**\n   * Singularization rules.\n   */\n\n  [[/s$/i, ''], [/(ss)$/i, '$1'], [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'], [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'], [/ies$/i, 'y'], [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'], [/\\b(mon|smil)ies$/i, '$1ey'], [/\\b((?:tit)?m|l)ice$/i, '$1ouse'], [/(seraph|cherub)im$/i, '$1'], [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'], [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'], [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'], [/(test)(?:is|es)$/i, '$1is'], [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'], [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'], [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'], [/(alumn|alg|vertebr)ae$/i, '$1a'], [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'], [/(matr|append)ices$/i, '$1ix'], [/(pe)(rson|ople)$/i, '$1rson'], [/(child)ren$/i, '$1'], [/(eau)x?$/i, '$1'], [/men$/i, 'man']].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n  /**\n   * Uncountable rules.\n   */\n\n  [// Singular words with no plurals.\n  'adulthood', 'advice', 'agenda', 'aid', 'aircraft', 'alcohol', 'ammo', 'analytics', 'anime', 'athletics', 'audio', 'bison', 'blood', 'bream', 'buffalo', 'butter', 'carp', 'cash', 'chassis', 'chess', 'clothing', 'cod', 'commerce', 'cooperation', 'corps', 'debris', 'diabetes', 'digestion', 'elk', 'energy', 'equipment', 'excretion', 'expertise', 'firmware', 'flounder', 'fun', 'gallows', 'garbage', 'graffiti', 'hardware', 'headquarters', 'health', 'herpes', 'highjinks', 'homework', 'housework', 'information', 'jeans', 'justice', 'kudos', 'labour', 'literature', 'machinery', 'mackerel', 'mail', 'media', 'mews', 'moose', 'music', 'mud', 'manga', 'news', 'only', 'personnel', 'pike', 'plankton', 'pliers', 'police', 'pollution', 'premises', 'rain', 'research', 'rice', 'salmon', 'scissors', 'series', 'sewage', 'shambles', 'shrimp', 'software', 'species', 'staff', 'swine', 'tennis', 'traffic', 'transportation', 'trout', 'tuna', 'wealth', 'welfare', 'whiting', 'wildebeest', 'wildlife', 'you', /pok[eé]mon$/i, // Regexes.\n  /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n  /deer$/i, // \"deer\", \"reindeer\"\n  /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n  /measles$/i, /o[iu]s$/i, // \"carnivorous\"\n  /pox$/i, // \"chickpox\", \"smallpox\"\n  /sheep$/i].forEach(pluralize.addUncountableRule);\n  return pluralize;\n});","export const kebabize = (str) => {\n  return str\n    .split(\"\")\n    .map((letter, idx) => {\n      return letter.toUpperCase() === letter\n        ? `${idx !== 0 ? \"-\" : \"\"}${letter.toLowerCase()}`\n        : letter;\n    })\n    .join(\"\");\n};\n\nexport const trimSentence = (str, cutOff) => {\n  if (str.length > cutOff) {\n    //trim the string to the maximum length\n    var trimmedString = str.substr(0, cutOff);\n\n    //re-trim if we are in the middle of a word and\n    trimmedString = trimmedString.substr(\n      0,\n      Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \"))\n    );\n    return trimmedString + \"...\";\n  } else {\n    return str;\n  }\n};\n\n\nexport const formatCraftType = (type) => type\n? type\n    .replace(/([A-Z])/g, \" $1\")\n    .replace(/^./, function(str) {\n      return str.toUpperCase();\n    })\n: \"\""],"sourceRoot":""}