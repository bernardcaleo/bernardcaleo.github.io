{"version":3,"sources":["webpack:///./node_modules/events/events.js","webpack:///./node_modules/algoliasearch-helper/src/requestBuilder.js","webpack:///./node_modules/algoliasearch-helper/src/version.js","webpack:///./node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack:///./node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack:///./node_modules/algoliasearch/dist/algoliasearch-lite.umd.js","webpack:///./node_modules/algoliasearch-helper/src/functions/merge.js","webpack:///./node_modules/algoliasearch-helper/src/functions/find.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack:///./node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack:///./node_modules/algoliasearch-helper/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/inherits.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/intersection.js","webpack:///./node_modules/algoliasearch-helper/src/functions/compact.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/version.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createStore.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectRefinementList.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Panel.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/PanelCallbackHandler.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/translatable.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlighter.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/SearchBox.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/List.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/RefinementList.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/RefinementList.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Hits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Hits.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectStateResults.js","webpack:///./src/components/TypeRefinementList/index.tsx","webpack:///./src/components/icons/eye.tsx","webpack:///./src/components/CollectionHeader/index.tsx","webpack:///./src/components/InstantSearch/index.tsx","webpack:///./node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack:///./node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack:///./node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack:///./node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack:///./node_modules/algoliasearch-helper/src/functions/omit.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/orderBy.js"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","module","exports","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","name","emitter","count","console","warn","onceWrapper","fired","removeListener","wrapFn","arguments","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","message","context","handler","len","listeners","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","merge","requestBuilder","_getQueries","queries","indexName","params","_getHitsSearchParams","getRefinedDisjunctiveFacets","forEach","refinedFacet","_getDisjunctiveFacetSearchParams","getRefinedHierarchicalFacets","hierarchicalFacet","getHierarchicalFacetByName","currentRefinement","getHierarchicalRefinement","separator","_getHierarchicalFacetSeparator","split","facets","disjunctiveFacets","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","numericFilters","_getNumericFilters","additionalParams","tagFilters","_getTagFilters","getQueryParams","facet","hierarchicalRootLevel","hitsPerPage","page","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","facetName","numericRefinements","attribute","operators","operator","values","isArray","vs","map","v","tagRefinements","join","facetsRefinements","facetValue","facetsExcludes","disjunctiveFacetsRefinements","facetValues","orFilters","hierarchicalFacetsRefinements","attributeToRefine","attributesIndex","rootPath","_getHierarchicalRootPath","indexOf","slice","lastIndexOf","attributes","hierarchicalFacets","reduce","allAttributes","hierarchicalRefinement","level","newAttributes","rootLevel","attributeIndex","parentLevel","getSearchForFacetQuery","query","maxFacetHits","stateForSearchForFacetValues","isDisjunctiveFacet","clearRefinements","searchForFacetSearchParameters","facetQuery","SearchParameters","SearchResults","DerivedHelper","inherits","objectHasKeys","version","AlgoliaSearchHelper","client","options","addAlgoliaAgent","setClient","opts","make","lastResults","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","setPage","isPageReset","getCurrentPage","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","setQueryParameters","self","then","content","results","_originalResponse","e","catch","searchForFacetValues","userState","clientHasSFFV","initIndex","isDisjunctive","algoliaQuery","facetHits","f","isRefined","isDisjunctiveFacetRefined","isFacetRefined","setQuery","q","resetPage","clearTags","addDisjunctiveFacetRefinement","addDisjunctiveRefine","addHierarchicalFacetRefinement","addNumericRefinement","addFacetRefinement","addRefine","addFacetExclusion","addExcludeRefinement","addExclude","addTag","tag","addTagRefinement","removeNumericRefinement","removeDisjunctiveFacetRefinement","removeDisjunctiveRefine","removeHierarchicalFacetRefinement","removeFacetRefinement","removeRefine","removeFacetExclusion","removeExcludeRefinement","removeExclude","removeTag","removeTagRefinement","toggleFacetExclusion","toggleExcludeFacetRefinement","toggleExclude","toggleRefinement","toggleFacetRefinement","toggleRefine","toggleTag","toggleTagRefinement","nextPage","previousPage","setIndex","setQueryParameter","parameter","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","getNumericRefinements","isConjunctiveFacet","isHierarchicalFacet","isHierarchicalFacetRefined","isExcluded","isExcludeRefined","isDisjunctiveRefined","hasTag","isTagRefined","hasTagRefinements","getIndex","getPage","getTags","getRefinements","refinements","getConjunctiveRefinements","r","getExcludeRefinements","getDisjunctiveRefinements","getNumericRefinement","getHierarchicalFacetBreadcrumb","states","mainQueries","queriesCount","helper","derivedQueries","derivedHelper","derivedState","getModifiedState","derivedStateQueries","queryId","_dispatchAlgoliaResponse","_dispatchAlgoliaError","s","specificResults","splice","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","fn","detachDerivedHelper","pos","hasPendingRequests","find","sortBy","defaults","defaultInstructions","sort","out","sortInstruction","matchingDefault","defaultInstruction","t","configurable","writable","filter","getOwnPropertyDescriptor","o","getOwnPropertyDescriptors","defineProperties","Symbol","iterator","toString","a","u","next","done","return","from","localStorage","window","JSON","parse","getItem","miss","Promise","resolve","stringify","all","setItem","delete","clear","removeItem","caches","serializable","c","Math","floor","random","l","replace","encodeURIComponent","h","d","data","entries","timeout","headers","queryParameters","cacheable","Read","Write","Any","g","status","lastUpdate","Date","now","b","protocol","url","accept","P","j","method","toLowerCase","userAgent","transporterStackTrace","A","path","connectTimeout","timeouts","connect","responseTimeout","request","response","host","triesLeft","p","onSucess","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","getTimeout","statelessHosts","reverse","S","add","segment","T","charAt","substr","C","appId","authMode","apiKey","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","methods","N","k","requests","J","propertyIsEnumerable","I","E","W","XMLHttpRequest","open","setRequestHeader","setTimeout","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","multipleQueries","multipleSearchForFacetValues","isObjectOrArrayOrFunction","_merge","source","hasOwnProperty","sourceVal","targetVal","array","comparator","defaultsPure","omit","lib","addRefinement","refinementList","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","mainHelper","main","detach","parameters","algoliasearchHelper","ctor","superCtor","constructor","hasOwn","classNames","classes","argType","inner","default","intersection","valToNumber","RefinementList","isEqualNumericRefinement","every","el","newParameters","_parseNumbers","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","parsedValue","parseFloat","insideBoundingBox","geoRect","parsedValues","vPrime","instance","toggleHierarchicalFacetRefinement","validate","currentState","patch","_clearNumericRefinements","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","isNumericRefined","paramValue","op","val","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","disjunctiveNumericRefinedFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","queryParams","nextWithNumbers","previousPlainObject","acc","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","refinement","part","trim","arr1","arr2","Boolean","addAlgoliaAgents","searchClient","widget","ais","props","contextValue","multiIndexContext","indexContextValue","isTargetedIndexEqualIndex","indexId","targetedIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","format","_len","_key","encode","createInstantSearchManager","_ref","_ref$initialState","initialState","resultsState","stalledSearchDelay","stalledSearchTimer","_store$getState","store","getState","resultsFacetValues","isSearchStalled","handleSearchSuccess","handleSearchError","skip","initialSearchParameters","widgetsManager","onWidgetsUpdate","widgets","scheduled","scheduleUpdate","registerWidget","update","getWidgets","createWidgetsManager","metadata","getMetadata","searching","_cacheHydrated","_useCache","baseMethod","_len2","methodArgs","_key2","requestsWithSerializedParams","result","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","nextState","subscribe","createStore","hydrateMetadata","_internalIndexId","hydrateResultsState","searchingForFacetValues","getSearchParameters","sharedParameters","res","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","indices","derivedParameters","_getSearchParameters","_ref2","_ref3","isDerivedHelpersEmpty","getFacetByName","nextIsSearchStalled","_ref4","getWidgetsIds","meta","id","onSearchForFacetValues","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","transitionState","searchState","updateClient","updateIndex","newIndex","skipSearch","datum","items","item","nestedItem","isControlled","_Component","InstantSearch","_this","instantSearchManager","mainTargetedIndex","onInternalStateUpdate","onWidgetsInternalStateUpdate","createHrefForState","onSearchStateChange","onSearchParameters","nextProps","prevState","nextIsControlled","previousSearchState","prevProps","prevIsControlled","refresh","isUnmounting","createURL","getKnownKeys","_searchState","widgetsCollector","_searchState2","children","createElement","string","isRequired","shape","func","bool","object","oneOfType","node","number","getId","getCurrentRefinement","getValue","selectedValue","getLimit","showMore","limit","showMoreLimit","_refine","nextRefinement","nextValue","createConnector","displayName","propTypes","oneOf","defaultRefinement","arrayOf","searchable","transformItems","defaultProps","getProvidedProps","searchResults","searchForFacetValuesResults","canRefine","isFromSearch","label","_highlightResult","highlighted","getFacetValues","transformedItems","refine","cleanUp","_cleanUp","searchParameters","addKey","addRefinementKey","maxValuesPerFacet","nextSelectedItems","other","block","prefix","elements","suitElements","element","baseClassName","_createContext","PanelConsumer","Consumer","PanelProvider","Provider","Panel","_getPrototypeOf2","nextCanRefine","_this$props","className","header","footer","setCanRefine","PanelCallbackHandler","translatable","defaultTranslations","Composed","Translatable","translations","translation","translate","cx","highlightedTagName","isHighlighted","nonHighlightedTagName","TagName","hit","highlight","highlightProperty","tagName","parsedHighlightedValue","isLast","connectHighlight","defaultLoadingIndicator","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cy","attributeName","to","dur","repeatCount","defaultReset","defaultSubmit","SearchBox","searchAsYouType","input","inputRef","current","focusShortcuts","shortcuts","toUpperCase","charCodeAt","elt","srcElement","isContentEditable","which","keyCode","focus","stopPropagation","preventDefault","blur","_this$props2","onChange","_this$props3","onReset","document","addEventListener","onKeyDown","removeEventListener","_this2","_this$props4","autoFocus","loadingIndicator","submit","reset","searchInputEvents","prop","showLoadingIndicator","noValidate","onSubmit","action","role","ref","onInputMount","placeholder","autoComplete","autoCorrect","autoCapitalize","spellCheck","required","maxLength","title","hidden","exact","resetTitle","submitTitle","itemsPropType","any","List","extended","resetQuery","itemHasChildren","noRefinement","renderItem","child","disabled","onClick","onShowMoreClick","searchForItems","selectItem","noResults","_this3","searchBox","renderSearchBox","rootClassName","renderShowMore","show","checked","toLocaleString","connectRefinementList","hits","hitsWithPositions","queryID","style","borderBottom","paddingBottom","marginBottom","wordBreak","objectID","connectHits","_ref$className","_ref$hitComponent","hitComponent","HitComponent","allSearchResults","CustomRefinementList","useState","active","setActive","sx","display","flexWrap","fontSize","rem","li","fontWeight","mr","whiteSpace","pr","overflowX","borderBottomColor","href","color","EyeOff","stroke-width","CollectionHeader","description","isSearch","defaultQuery","bgType","bg","Container","ArrowBg","alignItems","justifyContent","flexDirection","pb","mb","BackBtn","variant","lineHeight","algoliasearch","Results","heading","Layout","sticky","process","ALGOLIA_INDEX","py","ScrollContainer","TypeRefinementList","gridTemplateColumns","gridColumnGap","gridRowGap","ResourceCard","connectStateResults","nbHits","textAlign","mt","textDecoration","obj","sources","reduceRight","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","subtree","picked","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","parts","generateHierarchicalTree","excluded","sourceKeys","compact","findIndex","formatSort","getIndices","idx","assignFacetStats","dest","facetStats","stats","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","dataFromMainRequest","defaultData","root","excludes","_state","recSort","sortFn","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","resultsFacets","predicate","DEFAULT_SORT","extractNormalizedFacetValues","order","hierarchicalFacetValues","vanillaSortFn","getFacetStats","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","compareAscending","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee"],"mappings":"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","file":"e5e4d07721db6779cdb7d383a26dd96048388ae7-54d4f486ac85c65d79a7.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      ReflectApply(listeners[i], this, args);\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = _getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) {\n    list[index] = list[index + 1];\n  }\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}","'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = []; // One query for the hits\n\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    }); // One for each disjunctive facets\n\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    }); // maybe more to get the root level of hierarchical facets when activated\n\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function _getHitsSearchParams(state) {\n    var facets = state.facets.concat(state.disjunctiveFacets).concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n\n    var numericFilters = requestBuilder._getNumericFilters(state);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function _getDisjunctiveFacetSearchParams(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, hierarchicalRootLevel);\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function _getNumericFilters(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function _getTagFilters(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function _getFacetFilters(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function (facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function (facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function (facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n\n      var orFilters = [];\n      facetValues.forEach(function (facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n      facetFilters.push(orFilters);\n    });\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function (facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeToRefine;\n      var attributesIndex; // we ask for parent facet values only when the `facet` is the current hierarchical facet\n\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || !rootPath && hierarchicalRootLevel === true || rootPath && rootPath.split(separator).length === facetValue.split(separator).length) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n    return facetFilters;\n  },\n  _getHitsHierarchicalFacetsAttributes: function _getHitsHierarchicalFacetsAttributes(state) {\n    var out = [];\n    return state.hierarchicalFacets.reduce( // ask for as much levels as there's hierarchical refinements\n    function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n      var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0]; // if no refinement, ask for root level\n\n      if (!hierarchicalRefinement) {\n        allAttributes.push(hierarchicalFacet.attributes[0]);\n        return allAttributes;\n      }\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var level = hierarchicalRefinement.split(separator).length;\n      var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n      return allAttributes.concat(newAttributes);\n    }, out);\n  },\n  _getDisjunctiveHierarchicalFacetAttribute: function _getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || ''; // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n  getSearchForFacetQuery: function getSearchForFacetQuery(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ? state.clearRefinements(facetName) : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n\n    return merge({}, requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);\n  }\n};\nmodule.exports = requestBuilder;","'use strict';\n\nmodule.exports = '3.2.2';","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\n\nvar SearchResults = require('./SearchResults');\n\nvar DerivedHelper = require('./DerivedHelper');\n\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\n\nvar inherits = require('./functions/inherits');\n\nvar objectHasKeys = require('./functions/objectHasKeys');\n\nvar version = require('./version');\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\n\n\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({\n    onlyWithDerivedHelpers: false\n  });\n\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({\n    onlyWithDerivedHelpers: true\n  });\n\n  return this;\n};\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\n\n\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\n\n\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n\n  var self = this;\n  this._currentNbQueries++;\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client.search(queries).then(function (content) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(null, new SearchResults(tempState, content.results), tempState);\n    }).catch(function (err) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(err, null, tempState);\n    });\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function (content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\n\n\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n\n  if (!clientHasSFFV && typeof this.client.initIndex !== 'function') {\n    throw new Error('search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues');\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n  this._currentNbQueries++;\n  var self = this;\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n  var searchForFacetValuesPromise = clientHasSFFV ? this.client.searchForFacetValues([{\n    indexName: state.index,\n    params: algoliaQuery\n  }]) : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    content = Array.isArray(content) ? content[0] : content;\n    content.facetHits.forEach(function (f) {\n      f.isRefined = isDisjunctive ? state.isDisjunctiveFacetRefined(facet, f.value) : state.isFacetRefined(facet, f.value);\n    });\n    return content;\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\n\n\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\n\n\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\n\n\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\n\n\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n/**\n * @private\n */\n\n\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\n\n\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function (newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\n\n\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  } // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n\n\n  return false;\n};\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\n\n\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\n\n\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\n\n\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\n\n\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\n\n\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\n\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\n\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\n\n\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n    disjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n  return refinements;\n};\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\n\n\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\n\n\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n}; // /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\n\n\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n    return derivedStateQueries;\n  });\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries).then(this._dispatchAlgoliaResponse.bind(this, states, queryId)).catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\n\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n  var results = content.results.slice();\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  this.emit('error', {\n    error: error\n  });\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (query, facetFilters, numericFilters, tagFilters) {\n  return query || facetFilters.length !== 0 || numericFilters.length !== 0 || tagFilters.length !== 0;\n};\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return this.state.disjunctiveRefinements[facet] && this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.client = newClient;\n  return this;\n};\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\n\n\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\n\n\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\n\n\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\n\nmodule.exports = AlgoliaSearchHelper;","'use strict';\n\nvar find = require('./find');\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\n\n\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","/*! algoliasearch-lite.umd.js | 4.6.0 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).algoliasearch = t();\n}(this, function () {\n  \"use strict\";\n\n  function e(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  function t(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function r(r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var o = null != arguments[n] ? arguments[n] : {};\n      n % 2 ? t(Object(o), !0).forEach(function (t) {\n        e(r, t, o[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(o)) : t(Object(o)).forEach(function (e) {\n        Object.defineProperty(r, e, Object.getOwnPropertyDescriptor(o, e));\n      });\n    }\n\n    return r;\n  }\n\n  function n(e, t) {\n    if (null == e) return {};\n\n    var r,\n        n,\n        o = function (e, t) {\n      if (null == e) return {};\n      var r,\n          n,\n          o = {},\n          a = Object.keys(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      }\n\n      return o;\n    }(e, t);\n\n    if (Object.getOwnPropertySymbols) {\n      var a = Object.getOwnPropertySymbols(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n      }\n    }\n\n    return o;\n  }\n\n  function o(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          o = !1,\n          a = void 0;\n\n      try {\n        for (var u, i = e[Symbol.iterator](); !(n = (u = i.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0) {\n          ;\n        }\n      } catch (e) {\n        o = !0, a = e;\n      } finally {\n        try {\n          n || null == i.return || i.return();\n        } finally {\n          if (o) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function a(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = new Array(e.length); t < e.length; t++) {\n          r[t] = e[t];\n        }\n\n        return r;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }();\n  }\n\n  function u(e) {\n    var t,\n        r = \"algoliasearch-client-js-\".concat(e.key),\n        n = function n() {\n      return void 0 === t && (t = e.localStorage || window.localStorage), t;\n    },\n        a = function a() {\n      return JSON.parse(n().getItem(r) || \"{}\");\n    };\n\n    return {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return Promise.resolve().then(function () {\n          var r = JSON.stringify(e),\n              n = a()[r];\n          return Promise.all([n || t(), void 0 !== n]);\n        }).then(function (e) {\n          var t = o(e, 2),\n              n = t[0],\n              a = t[1];\n          return Promise.all([n, a || r.miss(n)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve().then(function () {\n          var o = a();\n          return o[JSON.stringify(e)] = t, n().setItem(r, JSON.stringify(o)), t;\n        });\n      },\n      delete: function _delete(e) {\n        return Promise.resolve().then(function () {\n          var t = a();\n          delete t[JSON.stringify(e)], n().setItem(r, JSON.stringify(t));\n        });\n      },\n      clear: function clear() {\n        return Promise.resolve().then(function () {\n          n().removeItem(r);\n        });\n      }\n    };\n  }\n\n  function i(e) {\n    var t = a(e.caches),\n        r = t.shift();\n    return void 0 === r ? {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            n = t();\n        return n.then(function (e) {\n          return Promise.all([e, r.miss(e)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve(t);\n      },\n      delete: function _delete(e) {\n        return Promise.resolve();\n      },\n      clear: function clear() {\n        return Promise.resolve();\n      }\n    } : {\n      get: function get(e, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return r.get(e, n, o).catch(function () {\n          return i({\n            caches: t\n          }).get(e, n, o);\n        });\n      },\n      set: function set(e, n) {\n        return r.set(e, n).catch(function () {\n          return i({\n            caches: t\n          }).set(e, n);\n        });\n      },\n      delete: function _delete(e) {\n        return r.delete(e).catch(function () {\n          return i({\n            caches: t\n          }).delete(e);\n        });\n      },\n      clear: function clear() {\n        return r.clear().catch(function () {\n          return i({\n            caches: t\n          }).clear();\n        });\n      }\n    };\n  }\n\n  function s() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {\n      serializable: !0\n    },\n        t = {};\n    return {\n      get: function get(r, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            a = JSON.stringify(r);\n        if (a in t) return Promise.resolve(e.serializable ? JSON.parse(t[a]) : t[a]);\n\n        var u = n(),\n            i = o && o.miss || function () {\n          return Promise.resolve();\n        };\n\n        return u.then(function (e) {\n          return i(e);\n        }).then(function () {\n          return u;\n        });\n      },\n      set: function set(r, n) {\n        return t[JSON.stringify(r)] = e.serializable ? JSON.stringify(n) : n, Promise.resolve(n);\n      },\n      delete: function _delete(e) {\n        return delete t[JSON.stringify(e)], Promise.resolve();\n      },\n      clear: function clear() {\n        return t = {}, Promise.resolve();\n      }\n    };\n  }\n\n  function c(e) {\n    for (var t = e.length - 1; t > 0; t--) {\n      var r = Math.floor(Math.random() * (t + 1)),\n          n = e[t];\n      e[t] = e[r], e[r] = n;\n    }\n\n    return e;\n  }\n\n  function l(e, t) {\n    return t ? (Object.keys(t).forEach(function (r) {\n      e[r] = t[r](e);\n    }), e) : e;\n  }\n\n  function f(e) {\n    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {\n      r[n - 1] = arguments[n];\n    }\n\n    var o = 0;\n    return e.replace(/%s/g, function () {\n      return encodeURIComponent(r[o++]);\n    });\n  }\n\n  var h = {\n    WithinQueryParameters: 0,\n    WithinHeaders: 1\n  };\n\n  function d(e, t) {\n    var r = e || {},\n        n = r.data || {};\n    return Object.keys(r).forEach(function (e) {\n      -1 === [\"timeout\", \"headers\", \"queryParameters\", \"data\", \"cacheable\"].indexOf(e) && (n[e] = r[e]);\n    }), {\n      data: Object.entries(n).length > 0 ? n : void 0,\n      timeout: r.timeout || t,\n      headers: r.headers || {},\n      queryParameters: r.queryParameters || {},\n      cacheable: r.cacheable\n    };\n  }\n\n  var m = {\n    Read: 1,\n    Write: 2,\n    Any: 3\n  },\n      p = 1,\n      v = 2,\n      y = 3;\n\n  function g(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p;\n    return r(r({}, e), {}, {\n      status: t,\n      lastUpdate: Date.now()\n    });\n  }\n\n  function b(e) {\n    return \"string\" == typeof e ? {\n      protocol: \"https\",\n      url: e,\n      accept: m.Any\n    } : {\n      protocol: e.protocol || \"https\",\n      url: e.url,\n      accept: e.accept || m.Any\n    };\n  }\n\n  var O = \"GET\",\n      P = \"POST\";\n\n  function q(e, t) {\n    return Promise.all(t.map(function (t) {\n      return e.get(t, function () {\n        return Promise.resolve(g(t));\n      });\n    })).then(function (e) {\n      var r = e.filter(function (e) {\n        return function (e) {\n          return e.status === p || Date.now() - e.lastUpdate > 12e4;\n        }(e);\n      }),\n          n = e.filter(function (e) {\n        return function (e) {\n          return e.status === y && Date.now() - e.lastUpdate <= 12e4;\n        }(e);\n      }),\n          o = [].concat(a(r), a(n));\n      return {\n        getTimeout: function getTimeout(e, t) {\n          return (0 === n.length && 0 === e ? 1 : n.length + 3 + e) * t;\n        },\n        statelessHosts: o.length > 0 ? o.map(function (e) {\n          return b(e);\n        }) : t\n      };\n    });\n  }\n\n  function j(e, t, n, o) {\n    var u = [],\n        i = function (e, t) {\n      if (e.method === O || void 0 === e.data && void 0 === t.data) return;\n      var n = Array.isArray(e.data) ? e.data : r(r({}, e.data), t.data);\n      return JSON.stringify(n);\n    }(n, o),\n        s = function (e, t) {\n      var n = r(r({}, e.headers), t.headers),\n          o = {};\n      return Object.keys(n).forEach(function (e) {\n        var t = n[e];\n        o[e.toLowerCase()] = t;\n      }), o;\n    }(e, o),\n        c = n.method,\n        l = n.method !== O ? {} : r(r({}, n.data), o.data),\n        f = r(r(r({\n      \"x-algolia-agent\": e.userAgent.value\n    }, e.queryParameters), l), o.queryParameters),\n        h = 0,\n        d = function t(r, a) {\n      var l = r.pop();\n      if (void 0 === l) throw {\n        name: \"RetryError\",\n        message: \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n        transporterStackTrace: A(u)\n      };\n\n      var d = {\n        data: i,\n        headers: s,\n        method: c,\n        url: w(l, n.path, f),\n        connectTimeout: a(h, e.timeouts.connect),\n        responseTimeout: a(h, o.timeout)\n      },\n          m = function m(e) {\n        var t = {\n          request: d,\n          response: e,\n          host: l,\n          triesLeft: r.length\n        };\n        return u.push(t), t;\n      },\n          p = {\n        onSucess: function onSucess(e) {\n          return function (e) {\n            try {\n              return JSON.parse(e.content);\n            } catch (t) {\n              throw function (e, t) {\n                return {\n                  name: \"DeserializationError\",\n                  message: e,\n                  response: t\n                };\n              }(t.message, e);\n            }\n          }(e);\n        },\n        onRetry: function onRetry(n) {\n          var o = m(n);\n          return n.isTimedOut && h++, Promise.all([e.logger.info(\"Retryable failure\", x(o)), e.hostsCache.set(l, g(l, n.isTimedOut ? y : v))]).then(function () {\n            return t(r, a);\n          });\n        },\n        onFail: function onFail(e) {\n          throw m(e), function (e, t) {\n            var r = e.content,\n                n = e.status,\n                o = r;\n\n            try {\n              o = JSON.parse(r).message;\n            } catch (e) {}\n\n            return function (e, t, r) {\n              return {\n                name: \"ApiError\",\n                message: e,\n                status: t,\n                transporterStackTrace: r\n              };\n            }(o, n, t);\n          }(e, A(u));\n        }\n      };\n\n      return e.requester.send(d).then(function (e) {\n        return function (e, t) {\n          return function (e) {\n            var t = e.status;\n            return e.isTimedOut || function (e) {\n              var t = e.isTimedOut,\n                  r = e.status;\n              return !t && 0 == ~~r;\n            }(e) || 2 != ~~(t / 100) && 4 != ~~(t / 100);\n          }(e) ? t.onRetry(e) : 2 == ~~(e.status / 100) ? t.onSucess(e) : t.onFail(e);\n        }(e, p);\n      });\n    };\n\n    return q(e.hostsCache, t).then(function (e) {\n      return d(a(e.statelessHosts).reverse(), e.getTimeout);\n    });\n  }\n\n  function S(e) {\n    var t = {\n      value: \"Algolia for JavaScript (\".concat(e, \")\"),\n      add: function add(e) {\n        var r = \"; \".concat(e.segment).concat(void 0 !== e.version ? \" (\".concat(e.version, \")\") : \"\");\n        return -1 === t.value.indexOf(r) && (t.value = \"\".concat(t.value).concat(r)), t;\n      }\n    };\n    return t;\n  }\n\n  function w(e, t, r) {\n    var n = T(r),\n        o = \"\".concat(e.protocol, \"://\").concat(e.url, \"/\").concat(\"/\" === t.charAt(0) ? t.substr(1) : t);\n    return n.length && (o += \"?\".concat(n)), o;\n  }\n\n  function T(e) {\n    return Object.keys(e).map(function (t) {\n      return f(\"%s=%s\", t, (r = e[t], \"[object Object]\" === Object.prototype.toString.call(r) || \"[object Array]\" === Object.prototype.toString.call(r) ? JSON.stringify(e[t]) : e[t]));\n      var r;\n    }).join(\"&\");\n  }\n\n  function A(e) {\n    return e.map(function (e) {\n      return x(e);\n    });\n  }\n\n  function x(e) {\n    var t = e.request.headers[\"x-algolia-api-key\"] ? {\n      \"x-algolia-api-key\": \"*****\"\n    } : {};\n    return r(r({}, e), {}, {\n      request: r(r({}, e.request), {}, {\n        headers: r(r({}, e.request.headers), t)\n      })\n    });\n  }\n\n  var C = function C(e) {\n    var t = e.appId,\n        n = function (e, t, r) {\n      var n = {\n        \"x-algolia-api-key\": r,\n        \"x-algolia-application-id\": t\n      };\n      return {\n        headers: function headers() {\n          return e === h.WithinHeaders ? n : {};\n        },\n        queryParameters: function queryParameters() {\n          return e === h.WithinQueryParameters ? n : {};\n        }\n      };\n    }(void 0 !== e.authMode ? e.authMode : h.WithinHeaders, t, e.apiKey),\n        a = function (e) {\n      var t = e.hostsCache,\n          r = e.logger,\n          n = e.requester,\n          a = e.requestsCache,\n          u = e.responsesCache,\n          i = e.timeouts,\n          s = e.userAgent,\n          c = e.hosts,\n          l = e.queryParameters,\n          f = {\n        hostsCache: t,\n        logger: r,\n        requester: n,\n        requestsCache: a,\n        responsesCache: u,\n        timeouts: i,\n        userAgent: s,\n        headers: e.headers,\n        queryParameters: l,\n        hosts: c.map(function (e) {\n          return b(e);\n        }),\n        read: function read(e, t) {\n          var r = d(t, f.timeouts.read),\n              n = function n() {\n            return j(f, f.hosts.filter(function (e) {\n              return 0 != (e.accept & m.Read);\n            }), e, r);\n          };\n\n          if (!0 !== (void 0 !== r.cacheable ? r.cacheable : e.cacheable)) return n();\n          var a = {\n            request: e,\n            mappedRequestOptions: r,\n            transporter: {\n              queryParameters: f.queryParameters,\n              headers: f.headers\n            }\n          };\n          return f.responsesCache.get(a, function () {\n            return f.requestsCache.get(a, function () {\n              return f.requestsCache.set(a, n()).then(function (e) {\n                return Promise.all([f.requestsCache.delete(a), e]);\n              }, function (e) {\n                return Promise.all([f.requestsCache.delete(a), Promise.reject(e)]);\n              }).then(function (e) {\n                var t = o(e, 2);\n                t[0];\n                return t[1];\n              });\n            });\n          }, {\n            miss: function miss(e) {\n              return f.responsesCache.set(a, e);\n            }\n          });\n        },\n        write: function write(e, t) {\n          return j(f, f.hosts.filter(function (e) {\n            return 0 != (e.accept & m.Write);\n          }), e, d(t, f.timeouts.write));\n        }\n      };\n      return f;\n    }(r(r({\n      hosts: [{\n        url: \"\".concat(t, \"-dsn.algolia.net\"),\n        accept: m.Read\n      }, {\n        url: \"\".concat(t, \".algolia.net\"),\n        accept: m.Write\n      }].concat(c([{\n        url: \"\".concat(t, \"-1.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-2.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-3.algolianet.com\")\n      }]))\n    }, e), {}, {\n      headers: r(r(r({}, n.headers()), {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }), e.headers),\n      queryParameters: r(r({}, n.queryParameters()), e.queryParameters)\n    }));\n\n    return l({\n      transporter: a,\n      appId: t,\n      addAlgoliaAgent: function addAlgoliaAgent(e, t) {\n        a.userAgent.add({\n          segment: e,\n          version: t\n        });\n      },\n      clearCache: function clearCache() {\n        return Promise.all([a.requestsCache.clear(), a.responsesCache.clear()]).then(function () {});\n      }\n    }, e.methods);\n  },\n      N = function N(e) {\n    return function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = {\n        transporter: e.transporter,\n        appId: e.appId,\n        indexName: t\n      };\n      return l(n, r.methods);\n    };\n  },\n      k = function k(e) {\n    return function (t, n) {\n      var o = t.map(function (e) {\n        return r(r({}, e), {}, {\n          params: T(e.params || {})\n        });\n      });\n      return e.transporter.read({\n        method: P,\n        path: \"1/indexes/*/queries\",\n        data: {\n          requests: o\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      J = function J(e) {\n    return function (t, o) {\n      return Promise.all(t.map(function (t) {\n        var a = t.params,\n            u = a.facetName,\n            i = a.facetQuery,\n            s = n(a, [\"facetName\", \"facetQuery\"]);\n        return N(e)(t.indexName, {\n          methods: {\n            searchForFacetValues: I\n          }\n        }).searchForFacetValues(u, i, r(r({}, o), s));\n      }));\n    };\n  },\n      E = function E(e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/query\", e.indexName),\n        data: {\n          query: t\n        },\n        cacheable: !0\n      }, r);\n    };\n  },\n      I = function I(e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/facets/%s/query\", e.indexName, t),\n        data: {\n          facetQuery: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      F = 1,\n      R = 2,\n      D = 3;\n\n  function W(e, t, n) {\n    var o,\n        a = {\n      appId: e,\n      apiKey: t,\n      timeouts: {\n        connect: 1,\n        read: 2,\n        write: 30\n      },\n      requester: {\n        send: function send(e) {\n          return new Promise(function (t) {\n            var r = new XMLHttpRequest();\n            r.open(e.method, e.url, !0), Object.keys(e.headers).forEach(function (t) {\n              return r.setRequestHeader(t, e.headers[t]);\n            });\n\n            var n,\n                o = function o(e, n) {\n              return setTimeout(function () {\n                r.abort(), t({\n                  status: 0,\n                  content: n,\n                  isTimedOut: !0\n                });\n              }, 1e3 * e);\n            },\n                a = o(e.connectTimeout, \"Connection timeout\");\n\n            r.onreadystatechange = function () {\n              r.readyState > r.OPENED && void 0 === n && (clearTimeout(a), n = o(e.responseTimeout, \"Socket timeout\"));\n            }, r.onerror = function () {\n              0 === r.status && (clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText || \"Network request failed\",\n                status: r.status,\n                isTimedOut: !1\n              }));\n            }, r.onload = function () {\n              clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText,\n                status: r.status,\n                isTimedOut: !1\n              });\n            }, r.send(e.data);\n          });\n        }\n      },\n      logger: (o = D, {\n        debug: function debug(e, t) {\n          return F >= o && console.debug(e, t), Promise.resolve();\n        },\n        info: function info(e, t) {\n          return R >= o && console.info(e, t), Promise.resolve();\n        },\n        error: function error(e, t) {\n          return console.error(e, t), Promise.resolve();\n        }\n      }),\n      responsesCache: s(),\n      requestsCache: s({\n        serializable: !1\n      }),\n      hostsCache: i({\n        caches: [u({\n          key: \"\".concat(\"4.6.0\", \"-\").concat(e)\n        }), s()]\n      }),\n      userAgent: S(\"4.6.0\").add({\n        segment: \"Browser\",\n        version: \"lite\"\n      }),\n      authMode: h.WithinQueryParameters\n    };\n    return C(r(r(r({}, a), n), {}, {\n      methods: {\n        search: k,\n        searchForFacetValues: J,\n        multipleQueries: k,\n        multipleSearchForFacetValues: J,\n        initIndex: function initIndex(e) {\n          return function (t) {\n            return N(e)(t, {\n              methods: {\n                search: E,\n                searchForFacetValues: I\n              }\n            });\n          };\n        }\n      }\n    }));\n  }\n\n  return W.version = \"4.6.0\", W;\n});","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n\n  return target;\n}\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;","'use strict'; // @MAJOR can be replaced by native Array#find when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};","'use strict';\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n    var facetRefinement = !refinementList[attribute] ? [valueAsString] : refinementList[attribute].concat(valueAsString);\n    var mod = {};\n    mod[attribute] = facetRefinement;\n    return defaultsPure({}, mod, refinementList);\n  },\n\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var newRefinementList = Object.keys(refinementList).reduce(function (memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n        return memo;\n      }, {});\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] && refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\nmodule.exports = lib;","'use strict';\n\nvar events = require('events');\n\nvar inherits = require('../functions/inherits');\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\n\n\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\n\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\n\nvar SearchResults = require('./src/SearchResults');\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\n\n\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\n\n\nalgoliasearchHelper.version = require('./src/version.js');\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\n\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\n\nalgoliasearchHelper.SearchParameters = SearchParameters;\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\n\nalgoliasearchHelper.SearchResults = SearchResults;\nmodule.exports = algoliasearchHelper;","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar intersection = require('../functions/intersection');\n\nvar find = require('../functions/find');\n\nvar valToNumber = require('../functions/valToNumber');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar RefinementList = require('./RefinementList');\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\n\n\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (el, i) {\n      return isEqualNumericRefinement(b[i], el);\n    });\n  }\n\n  return a === b;\n}\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\n\n\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\n\n\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n\n  this.hierarchicalFacets = params.hierarchicalFacets || []; // Refinements\n\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\n\n\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\n\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n  var numbers = {};\n  var numberKeys = ['aroundPrecision', 'aroundRadius', 'getRankingInfo', 'minWordSizefor2Typos', 'minWordSizefor1Typo', 'page', 'maxValuesPerFacet', 'distinct', 'minimumAroundRadius', 'hitsPerPage', 'minProximity'];\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value); // global isNaN is ok to use here, value is only number or NaN\n\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  }); // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function (value) {\n          return parseFloat(value);\n        });\n      }\n\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\n\n\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      } // get it again in case it has been cleared\n\n\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n  return instance;\n};\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\n\n\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error('[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' + 'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error('[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' + 'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.numericFilters && params.numericRefinements && objectHasKeys(params.numericRefinements)) {\n    return new Error(\"[Numeric filters] Can't switch from the advanced to the managed API. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\"[Numeric filters] Can't switch from the managed API to the advanced. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(this.facetsRefinements, attribute, 'conjunctiveFacet'),\n      facetsExcludes: RefinementList.clearRefinement(this.facetsExcludes, attribute, 'exclude'),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')\n    };\n\n    if (patch.numericRefinements === this.numericRefinements && patch.facetsRefinements === this.facetsRefinements && patch.facetsExcludes === this.facetsExcludes && patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements && patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {\n      return this;\n    }\n\n    return this.setQueryParameters(patch);\n  },\n\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function addNumericRefinement(attribute, operator, v) {\n    var value = valToNumber(v);\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n    var mod = merge({}, this.numericRefinements);\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice(); // Add the element. Concat can't be used here because value can be an array.\n\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function getConjunctiveRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function getDisjunctiveRefinements(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function getHierarchicalRefinement(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function getExcludeRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function removeNumericRefinement(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator && isEqualNumericRefinement(value.val, valToNumber(paramValue));\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      })\n    });\n  },\n\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList[]} list of refinements\n   */\n  getNumericRefinements: function getNumericRefinements(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function getNumericRefinement(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      if (!objectHasKeys(this.numericRefinements[attribute])) {\n        return this.numericRefinements;\n      }\n\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function (memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n        operators = operators || {};\n        Object.keys(operators).forEach(function (operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function (value) {\n            var predicateResult = attribute({\n              val: value,\n              op: operator\n            }, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n\n          operatorList[operator] = outValues;\n        });\n        memo[key] = operatorList;\n        return memo;\n      }, {});\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error('Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      })\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet + '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined && this.hierarchicalFacetsRefinements[facet].length > 0 && ( // remove current refinement:\n    // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0] === value || // remove a parent refinement of the current refinement:\n    //  - refinement was 'beer > IPA > Flying dog'\n    //  - call is toggleRefine('beer > IPA')\n    //  - refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function addHierarchicalFacetRefinement(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function removeHierarchicalFacetRefinement(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function isDisjunctiveFacet(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function isHierarchicalFacet(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function isConjunctiveFacet(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined = this.numericRefinements[attribute] && this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined = findArray(this.numericRefinements[attribute][operator], parsedValue) !== undefined;\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this; // attributes used for numeric filter can also be disjunctive\n\n    var disjunctiveNumericRefinedFacets = intersection(Object.keys(this.numericRefinements).filter(function (facet) {\n      return Object.keys(self.numericRefinements[facet]).length > 0;\n    }), this.disjunctiveFacets);\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function (facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    }).concat(disjunctiveNumericRefinedFacets).concat(this.getRefinedHierarchicalFacets());\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection( // enforce the order between the two arrays,\n    // so that refinement name index === hierarchical facet index\n    this.hierarchicalFacets.map(function (facet) {\n      return facet.name;\n    }), Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n      return self.hierarchicalFacetsRefinements[facet].length > 0;\n    }));\n  },\n\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function getUnrefinedDisjunctiveFacets() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n  managedParameters: ['index', 'facets', 'disjunctiveFacets', 'facetsRefinements', 'facetsExcludes', 'disjunctiveFacetsRefinements', 'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n    var queryParams = {};\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n    return queryParams;\n  },\n\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n    var modification = {};\n    modification[parameter] = value;\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (previous, key) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    }, previousPlainObject);\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function resetPage() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function _getHierarchicalFacetSortBy(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function _getHierarchicalFacetSeparator(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function _getHierarchicalRootPath(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function _getHierarchicalShowParentLevel(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function getHierarchicalFacetByName(hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function getHierarchicalFacetBreadcrumb(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facetName));\n\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n  toString: function toString() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\n\nmodule.exports = SearchParameters;","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return arr2.indexOf(value) > -1 && arr1.indexOf(value) === index\n    /* skips duplicates */\n    ;\n  });\n}\n\nmodule.exports = intersection;","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from './createWidgetsManager';\nimport createStore from './createStore';\nimport { HIGHLIGHT_TAGS } from './highlight';\nimport { hasMultipleIndices } from './indexUtils';\nimport { version as ReactVersion } from 'react';\nimport version from './version';\n\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\n\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\n\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\n\n\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\n\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\n\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n\n  return 0;\n}; // This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\n\n\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\n\n\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      searchClient = _ref.searchClient,\n      resultsState = _ref.resultsState,\n      stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: hydrateMetadata(resultsState),\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n\n  function skipSearch() {\n    skip = true;\n  }\n\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread({}, indices, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n          mainParameters = _getSearchParameters.mainParameters,\n          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n\n\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n            parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread({}, results, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n\n      var resultsFacetValues = currentState.resultsFacetValues,\n          partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n      store.setState(_objectSpread({}, partialState, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: false,\n        error: null\n      }));\n    };\n  }\n\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n\n    var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n    store.setState(_objectSpread({}, partialState, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            partialState = _objectWithoutProperties(_store$getState, [\"resultsFacetValues\"]);\n\n        store.setState(_objectSpread({}, partialState, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    } // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    } // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n\n\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread({}, request, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n\n    if (Array.isArray(results.results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results.results);\n      return;\n    }\n\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n\n    if (Array.isArray(results.results)) {\n      return results.results.reduce(function (acc, result) {\n        return _objectSpread({}, acc, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  } // Called whenever a widget has been rendered with new props.\n\n\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread({}, store.getState(), {\n      metadata: metadata,\n      searching: true\n    })); // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n\n    search();\n  }\n\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread({}, store.getState(), {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n        query = _ref5.query,\n        _ref5$maxFacetHits = _ref5.maxFacetHits,\n        maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits; // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread({}, store.getState(), {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n\n      store.setState(_objectSpread({}, store.getState(), {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread({}, store.getState().resultsFacetValues, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread({}, store.getState(), {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex); // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}\n\nfunction hydrateMetadata(resultsState) {\n  if (!resultsState) {\n    return [];\n  } // add a value noop, which gets replaced once the widgets are mounted\n\n\n  return resultsState.metadata.map(function (datum) {\n    return _objectSpread({\n      value: function value() {}\n    }, datum, {\n      items: datum.items && datum.items.map(function (item) {\n        return _objectSpread({\n          value: function value() {}\n        }, item, {\n          items: item.items && item.items.map(function (nestedItem) {\n            return _objectSpread({\n              value: function value() {}\n            }, nestedItem);\n          })\n        });\n      })\n    });\n  });\n}","export default '6.8.2';","import { defer } from './utils';\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props, getMetadata) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n\n      if (this.props.widgetsCollector) {\n        var _searchState2 = this.props.searchState ? this.props.searchState : {};\n\n        this.props.widgetsCollector({\n          getSearchParameters: getSearchParameters,\n          getMetadata: getMetadata,\n          context: context,\n          props: props,\n          searchState: _searchState2\n        });\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  widgetsCollector: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, getIndexId, refineValue, getCurrentRefinementValue, getResults } from '../core/indexUtils';\nvar namespace = 'refinementList';\n\nfunction getId(props) {\n  return props.attribute;\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, \"\".concat(namespace, \".\").concat(getId(props)), []);\n\n  if (typeof currentRefinement !== 'string') {\n    return currentRefinement;\n  }\n\n  if (currentRefinement) {\n    return [currentRefinement];\n  }\n\n  return [];\n}\n\nfunction getValue(name, props, searchState, context) {\n  var currentRefinement = getCurrentRefinement(props, searchState, context);\n  var isAnewValue = currentRefinement.indexOf(name) === -1;\n  var nextRefinement = isAnewValue ? currentRefinement.concat([name]) // cannot use .push(), it mutates\n  : currentRefinement.filter(function (selectedValue) {\n    return selectedValue !== name;\n  }); // cannot use .splice(), it mutates\n\n  return nextRefinement;\n}\n\nfunction getLimit(_ref) {\n  var showMore = _ref.showMore,\n      limit = _ref.limit,\n      showMoreLimit = _ref.showMoreLimit;\n  return showMore ? showMoreLimit : limit;\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props); // Setting the value to an empty string ensures that it is persisted in\n  // the URL as an empty value.\n  // This is necessary in the case where `defaultRefinement` contains one\n  // item and we try to deselect it. `nextSelected` would be an empty array,\n  // which would not be persisted to the URL.\n  // {foo: ['bar']} => \"foo[0]=bar\"\n  // {foo: []} => \"\"\n\n  var nextValue = _defineProperty({}, id, nextRefinement.length > 0 ? nextRefinement : '');\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, \"\".concat(namespace, \".\").concat(getId(props)));\n}\n/**\n * connectRefinementList connector provides the logic to build a widget that will\n * give the user the ability to choose multiple values for a specific facet.\n * @name connectRefinementList\n * @kind connector\n * @requirements The attribute passed to the `attribute` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n * @propType {string} attribute - the name of the attribute in the record\n * @propType {boolean} [searchable=false] - allow search inside values\n * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.\n * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items\n * @propType {number} [limit=10] - the minimum number of displayed items\n * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`\n * @propType {string[]} defaultRefinement - the values of the items selected by default. The searchState of this widget takes the form of a list of `string`s, which correspond to the values of all selected refinements. However, when there are no refinements selected, the value of the searchState is an empty string.\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string[]} currentRefinement - the refinement currently applied\n * @providedPropType {array.<{count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the RefinementList can display.\n * @providedPropType {function} searchForItems - a function to toggle a search inside items values\n * @providedPropType {boolean} isFromSearch - a boolean that says if the `items` props contains facet values from the global search or from the search inside items.\n * @providedPropType {boolean} canRefine - a boolean that says whether you can refine\n */\n\n\nvar sortBy = ['isRefined', 'count:desc', 'name:asc'];\nexport default createConnector({\n  displayName: 'AlgoliaRefinementList',\n  propTypes: {\n    id: PropTypes.string,\n    attribute: PropTypes.string.isRequired,\n    operator: PropTypes.oneOf(['and', 'or']),\n    showMore: PropTypes.bool,\n    limit: PropTypes.number,\n    showMoreLimit: PropTypes.number,\n    defaultRefinement: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    searchable: PropTypes.bool,\n    transformItems: PropTypes.func\n  },\n  defaultProps: {\n    operator: 'or',\n    showMore: false,\n    limit: 10,\n    showMoreLimit: 20\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults, metadata, searchForFacetValuesResults) {\n    var attribute = props.attribute,\n        searchable = props.searchable,\n        indexContextValue = props.indexContextValue;\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var canRefine = Boolean(results) && Boolean(results.getFacetByName(attribute));\n    var isFromSearch = Boolean(searchForFacetValuesResults && searchForFacetValuesResults[attribute] && searchForFacetValuesResults.query !== ''); // Search For Facet Values is not available with derived helper (used for multi index search)\n\n    if (searchable && indexContextValue) {\n      throw new Error('react-instantsearch: searching in *List is not available when used inside a' + ' multi index context');\n    }\n\n    if (!canRefine) {\n      return {\n        items: [],\n        currentRefinement: getCurrentRefinement(props, searchState, {\n          ais: props.contextValue,\n          multiIndexContext: props.indexContextValue\n        }),\n        canRefine: canRefine,\n        isFromSearch: isFromSearch,\n        searchable: searchable\n      };\n    }\n\n    var items = isFromSearch ? searchForFacetValuesResults[attribute].map(function (v) {\n      return {\n        label: v.value,\n        value: getValue(v.value, props, searchState, {\n          ais: props.contextValue,\n          multiIndexContext: props.indexContextValue\n        }),\n        _highlightResult: {\n          label: {\n            value: v.highlighted\n          }\n        },\n        count: v.count,\n        isRefined: v.isRefined\n      };\n    }) : results.getFacetValues(attribute, {\n      sortBy: sortBy\n    }).map(function (v) {\n      return {\n        label: v.name,\n        value: getValue(v.name, props, searchState, {\n          ais: props.contextValue,\n          multiIndexContext: props.indexContextValue\n        }),\n        count: v.count,\n        isRefined: v.isRefined\n      };\n    });\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      items: transformedItems.slice(0, getLimit(props)),\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isFromSearch: isFromSearch,\n      searchable: searchable,\n      canRefine: transformedItems.length > 0\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  searchForFacetValues: function searchForFacetValues(props, searchState, nextRefinement) {\n    return {\n      facetName: props.attribute,\n      query: nextRefinement,\n      maxFacetHits: getLimit(props)\n    };\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var attribute = props.attribute,\n        operator = props.operator;\n    var addKey = operator === 'and' ? 'addFacet' : 'addDisjunctiveFacet';\n    var addRefinementKey = \"\".concat(addKey, \"Refinement\");\n    searchParameters = searchParameters.setQueryParameters({\n      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, getLimit(props))\n    });\n    searchParameters = searchParameters[addKey](attribute);\n    return getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }).reduce(function (res, val) {\n      return res[addRefinementKey](attribute, val);\n    }, searchParameters);\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var context = {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    };\n    return {\n      id: id,\n      index: getIndexId(context),\n      items: getCurrentRefinement(props, searchState, context).length > 0 ? [{\n        attribute: props.attribute,\n        label: \"\".concat(props.attribute, \": \"),\n        currentRefinement: getCurrentRefinement(props, searchState, context),\n        value: function value(nextState) {\n          return _refine(props, nextState, [], context);\n        },\n        items: getCurrentRefinement(props, searchState, context).map(function (item) {\n          return {\n            label: \"\".concat(item),\n            value: function value(nextState) {\n              var nextSelectedItems = getCurrentRefinement(props, nextState, context).filter(function (other) {\n                return other !== item;\n              });\n              return _refine(props, searchState, nextSelectedItems, context);\n            }\n          };\n        })\n      }] : []\n    };\n  }\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport cx from 'classnames';\nexport var createClassNames = function createClassNames(block) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';\n  return function () {\n    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n      elements[_key] = arguments[_key];\n    }\n\n    var suitElements = elements.filter(function (element) {\n      return element || element === '';\n    }).map(function (element) {\n      var baseClassName = \"\".concat(prefix, \"-\").concat(block);\n      return element ? \"\".concat(baseClassName, \"-\").concat(element) : baseClassName;\n    });\n    return cx(suitElements);\n  };\n};\nexport var isSpecialClick = function isSpecialClick(event) {\n  var isMiddleClick = event.button === 1;\n  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n};\nexport var capitalize = function capitalize(key) {\n  return key.length === 0 ? '' : \"\".concat(key[0].toUpperCase()).concat(key.slice(1));\n}; // taken from InstantSearch.js/utils\n\nexport function range(_ref) {\n  var _ref$start = _ref.start,\n      start = _ref$start === void 0 ? 0 : _ref$start,\n      end = _ref.end,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step; // We can't divide by 0 so we re-assign the step to 1 if it happens.\n\n  var limitStep = step === 0 ? 1 : step; // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n\n  var arrayLength = Math.round((end - start) / limitStep);\n  return _toConsumableArray(Array(arrayLength)).map(function (_, current) {\n    return (start + current) * limitStep;\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('Panel');\n\nvar _createContext = createContext(function setCanRefine() {}),\n    PanelConsumer = _createContext.Consumer,\n    PanelProvider = _createContext.Provider;\n\nexport { PanelConsumer, PanelProvider };\n\nvar Panel = /*#__PURE__*/function (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Panel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      canRefine: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCanRefine\", function (nextCanRefine) {\n      _this.setState({\n        canRefine: nextCanRefine\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          header = _this$props.header,\n          footer = _this$props.footer;\n      var canRefine = this.state.canRefine;\n      return React.createElement(\"div\", {\n        className: classNames(cx('', !canRefine && '-noRefinement'), className)\n      }, header && React.createElement(\"div\", {\n        className: cx('header')\n      }, header), React.createElement(\"div\", {\n        className: cx('body')\n      }, React.createElement(PanelProvider, {\n        value: this.setCanRefine\n      }, children)), footer && React.createElement(\"div\", {\n        className: cx('footer')\n      }, footer));\n    }\n  }]);\n\n  return Panel;\n}(Component);\n\n_defineProperty(Panel, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  header: PropTypes.node,\n  footer: PropTypes.node\n});\n\n_defineProperty(Panel, \"defaultProps\", {\n  className: '',\n  header: null,\n  footer: null\n});\n\nexport default Panel;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PanelConsumer } from './Panel';\n\nvar PanelCallbackHandler = /*#__PURE__*/function (_Component) {\n  _inherits(PanelCallbackHandler, _Component);\n\n  function PanelCallbackHandler() {\n    _classCallCheck(this, PanelCallbackHandler);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PanelCallbackHandler).apply(this, arguments));\n  }\n\n  _createClass(PanelCallbackHandler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.setCanRefine(this.props.canRefine);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.canRefine !== this.props.canRefine) {\n        this.props.setCanRefine(this.props.canRefine);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return PanelCallbackHandler;\n}(Component);\n\n_defineProperty(PanelCallbackHandler, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  canRefine: PropTypes.bool.isRequired,\n  setCanRefine: PropTypes.func.isRequired\n});\n\nvar PanelWrapper = function PanelWrapper(_ref) {\n  var canRefine = _ref.canRefine,\n      children = _ref.children;\n  return React.createElement(PanelConsumer, null, function (setCanRefine) {\n    return React.createElement(PanelCallbackHandler, {\n      setCanRefine: setCanRefine,\n      canRefine: canRefine\n    }, children);\n  });\n};\n\nexport default PanelWrapper;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nexport default function translatable(defaultTranslations) {\n  return function (Composed) {\n    var Translatable = /*#__PURE__*/function (_Component) {\n      _inherits(Translatable, _Component);\n\n      function Translatable() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        _classCallCheck(this, Translatable);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Translatable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n        _defineProperty(_assertThisInitialized(_this), \"translate\", function (key) {\n          var translations = _this.props.translations;\n          var translation = translations && translations.hasOwnProperty(key) ? translations[key] : defaultTranslations[key];\n\n          if (typeof translation === 'function') {\n            for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              params[_key2 - 1] = arguments[_key2];\n            }\n\n            return translation.apply(void 0, params);\n          }\n\n          return translation;\n        });\n\n        return _this;\n      }\n\n      _createClass(Translatable, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(Composed, _extends({\n            translate: this.translate\n          }, this.props));\n        }\n      }]);\n\n      return Translatable;\n    }(Component);\n\n    var name = Composed.displayName || Composed.name || 'UnknownComponent';\n    Translatable.displayName = \"Translatable(\".concat(name, \")\");\n    return Translatable;\n  };\n}","import React from 'react';\nimport classNames from 'classnames';\nexport var Highlight = function Highlight(_ref) {\n  var cx = _ref.cx,\n      value = _ref.value,\n      highlightedTagName = _ref.highlightedTagName,\n      isHighlighted = _ref.isHighlighted,\n      nonHighlightedTagName = _ref.nonHighlightedTagName;\n  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';\n  return React.createElement(TagName, {\n    className: cx(className)\n  }, value);\n};\n\nvar Highlighter = function Highlighter(_ref2) {\n  var cx = _ref2.cx,\n      hit = _ref2.hit,\n      attribute = _ref2.attribute,\n      highlight = _ref2.highlight,\n      highlightProperty = _ref2.highlightProperty,\n      tagName = _ref2.tagName,\n      nonHighlightedTagName = _ref2.nonHighlightedTagName,\n      separator = _ref2.separator,\n      className = _ref2.className;\n  var parsedHighlightedValue = highlight({\n    hit: hit,\n    attribute: attribute,\n    highlightProperty: highlightProperty\n  });\n  return React.createElement(\"span\", {\n    className: classNames(cx(''), className)\n  }, parsedHighlightedValue.map(function (item, i) {\n    if (Array.isArray(item)) {\n      var isLast = i === parsedHighlightedValue.length - 1;\n      return React.createElement(\"span\", {\n        key: i\n      }, item.map(function (element, index) {\n        return React.createElement(Highlight, {\n          cx: cx,\n          key: index,\n          value: element.value,\n          highlightedTagName: tagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: element.isHighlighted\n        });\n      }), !isLast && React.createElement(\"span\", {\n        className: cx('separator')\n      }, separator));\n    }\n\n    return React.createElement(Highlight, {\n      cx: cx,\n      key: i,\n      value: item.value,\n      highlightedTagName: tagName,\n      nonHighlightedTagName: nonHighlightedTagName,\n      isHighlighted: item.isHighlighted\n    });\n  }));\n};\n\nHighlighter.defaultProps = {\n  tagName: 'em',\n  nonHighlightedTagName: 'span',\n  className: '',\n  separator: ', '\n};\nexport default Highlighter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Highlight');\n\nvar Highlight = function Highlight(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_highlightResult\",\n    cx: cx\n  }));\n};\n\nexport default Highlight;","import { connectHighlight } from 'react-instantsearch-core';\nimport Highlight from '../components/Highlight';\n/**\n * Renders any attribute from a hit into its highlighted form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Highlight\n * @kind widget\n * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Highlight - root of the component\n * @themeKey ais-Highlight-highlighted - part of the text which is highlighted\n * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Highlight attribute=\"name\" hit={hit} />\n *   </div>\n * );\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"Pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Highlight);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { translatable } from 'react-instantsearch-core';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('SearchBox');\nvar defaultLoadingIndicator = React.createElement(\"svg\", {\n  width: \"18\",\n  height: \"18\",\n  viewBox: \"0 0 38 38\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  stroke: \"#444\",\n  className: cx('loadingIcon')\n}, React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  strokeWidth: \"2\"\n}, React.createElement(\"circle\", {\n  strokeOpacity: \".5\",\n  cx: \"18\",\n  cy: \"18\",\n  r: \"18\"\n}), React.createElement(\"path\", {\n  d: \"M36 18c0-9.94-8.06-18-18-18\"\n}, React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  from: \"0 18 18\",\n  to: \"360 18 18\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n})))));\nvar defaultReset = React.createElement(\"svg\", {\n  className: cx('resetIcon'),\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 20 20\",\n  width: \"10\",\n  height: \"10\"\n}, React.createElement(\"path\", {\n  d: \"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"\n}));\nvar defaultSubmit = React.createElement(\"svg\", {\n  className: cx('submitIcon'),\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"10\",\n  height: \"10\",\n  viewBox: \"0 0 40 40\"\n}, React.createElement(\"path\", {\n  d: \"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"\n}));\n\nvar SearchBox = /*#__PURE__*/function (_Component) {\n  _inherits(SearchBox, _Component);\n\n  function SearchBox(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBox).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"getQuery\", function () {\n      return _this.props.searchAsYouType ? _this.props.currentRefinement : _this.state.query;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onInputMount\", function (input) {\n      _this.input = input;\n      if (!_this.props.inputRef) return;\n\n      if (typeof _this.props.inputRef === 'function') {\n        _this.props.inputRef(input);\n      } else {\n        _this.props.inputRef.current = input;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (e) {\n      if (!_this.props.focusShortcuts) {\n        return;\n      }\n\n      var shortcuts = _this.props.focusShortcuts.map(function (key) {\n        return typeof key === 'string' ? key.toUpperCase().charCodeAt(0) : key;\n      });\n\n      var elt = e.target || e.srcElement;\n      var tagName = elt.tagName;\n\n      if (elt.isContentEditable || tagName === 'INPUT' || tagName === 'SELECT' || tagName === 'TEXTAREA') {\n        // already in an input\n        return;\n      }\n\n      var which = e.which || e.keyCode;\n\n      if (shortcuts.indexOf(which) === -1) {\n        // not the right shortcut\n        return;\n      }\n\n      _this.input.focus();\n\n      e.stopPropagation();\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.input.blur();\n\n      var _this$props = _this.props,\n          refine = _this$props.refine,\n          searchAsYouType = _this$props.searchAsYouType;\n\n      if (!searchAsYouType) {\n        refine(_this.getQuery());\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (event) {\n      var _this$props2 = _this.props,\n          searchAsYouType = _this$props2.searchAsYouType,\n          refine = _this$props2.refine,\n          onChange = _this$props2.onChange;\n      var value = event.target.value;\n\n      if (searchAsYouType) {\n        refine(value);\n      } else {\n        _this.setState({\n          query: value\n        });\n      }\n\n      if (onChange) {\n        onChange(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onReset\", function (event) {\n      var _this$props3 = _this.props,\n          searchAsYouType = _this$props3.searchAsYouType,\n          refine = _this$props3.refine,\n          onReset = _this$props3.onReset;\n      refine('');\n\n      _this.input.focus();\n\n      if (!searchAsYouType) {\n        _this.setState({\n          query: ''\n        });\n      }\n\n      if (onReset) {\n        onReset(event);\n      }\n    });\n\n    _this.state = {\n      query: props.searchAsYouType ? null : props.currentRefinement\n    };\n    return _this;\n  }\n\n  _createClass(SearchBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keydown', this.onKeyDown);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.onKeyDown);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.props.searchAsYouType && prevProps.currentRefinement !== this.props.currentRefinement) {\n        this.setState({\n          query: this.props.currentRefinement\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          translate = _this$props4.translate,\n          autoFocus = _this$props4.autoFocus,\n          loadingIndicator = _this$props4.loadingIndicator,\n          submit = _this$props4.submit,\n          reset = _this$props4.reset;\n      var query = this.getQuery();\n      var searchInputEvents = Object.keys(this.props).reduce(function (props, prop) {\n        if (['onsubmit', 'onreset', 'onchange'].indexOf(prop.toLowerCase()) === -1 && prop.indexOf('on') === 0) {\n          return _objectSpread({}, props, _defineProperty({}, prop, _this2.props[prop]));\n        }\n\n        return props;\n      }, {});\n      var isSearchStalled = this.props.showLoadingIndicator && this.props.isSearchStalled;\n      /* eslint-disable max-len */\n\n      return React.createElement(\"div\", {\n        className: classNames(cx(''), className)\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.props.onSubmit ? this.props.onSubmit : this.onSubmit,\n        onReset: this.onReset,\n        className: cx('form', isSearchStalled && 'form--stalledSearch'),\n        action: \"\",\n        role: \"search\"\n      }, React.createElement(\"input\", _extends({\n        ref: this.onInputMount,\n        type: \"search\",\n        placeholder: translate('placeholder'),\n        autoFocus: autoFocus,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"off\",\n        spellCheck: \"false\",\n        required: true,\n        maxLength: \"512\",\n        value: query,\n        onChange: this.onChange\n      }, searchInputEvents, {\n        className: cx('input')\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        title: translate('submitTitle'),\n        className: cx('submit')\n      }, submit), React.createElement(\"button\", {\n        type: \"reset\",\n        title: translate('resetTitle'),\n        className: cx('reset'),\n        hidden: !query || isSearchStalled\n      }, reset), this.props.showLoadingIndicator && React.createElement(\"span\", {\n        hidden: !isSearchStalled,\n        className: cx('loadingIndicator')\n      }, loadingIndicator)));\n      /* eslint-enable */\n    }\n  }]);\n\n  return SearchBox;\n}(Component);\n\n_defineProperty(SearchBox, \"propTypes\", {\n  currentRefinement: PropTypes.string,\n  className: PropTypes.string,\n  refine: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  loadingIndicator: PropTypes.node,\n  reset: PropTypes.node,\n  submit: PropTypes.node,\n  focusShortcuts: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  autoFocus: PropTypes.bool,\n  searchAsYouType: PropTypes.bool,\n  onSubmit: PropTypes.func,\n  onReset: PropTypes.func,\n  onChange: PropTypes.func,\n  isSearchStalled: PropTypes.bool,\n  showLoadingIndicator: PropTypes.bool,\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.exact({\n    current: PropTypes.object\n  })])\n});\n\n_defineProperty(SearchBox, \"defaultProps\", {\n  currentRefinement: '',\n  className: '',\n  focusShortcuts: ['s', '/'],\n  autoFocus: false,\n  searchAsYouType: true,\n  showLoadingIndicator: false,\n  isSearchStalled: false,\n  loadingIndicator: defaultLoadingIndicator,\n  reset: defaultReset,\n  submit: defaultSubmit\n});\n\nexport default translatable({\n  resetTitle: 'Clear the search query.',\n  submitTitle: 'Submit your search query.',\n  placeholder: 'Search here…'\n})(SearchBox);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SearchBox from '../components/SearchBox';\nvar itemsPropType = PropTypes.arrayOf(PropTypes.shape({\n  value: PropTypes.any,\n  label: PropTypes.node.isRequired,\n  items: function items() {\n    return itemsPropType.apply(void 0, arguments);\n  }\n}));\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"onShowMoreClick\", function () {\n      _this.setState(function (state) {\n        return {\n          extended: !state.extended\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLimit\", function () {\n      var _this$props = _this.props,\n          limit = _this$props.limit,\n          showMoreLimit = _this$props.showMoreLimit;\n      var extended = _this.state.extended;\n      return extended ? showMoreLimit : limit;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetQuery\", function () {\n      _this.setState({\n        query: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItem\", function (item, resetQuery) {\n      var itemHasChildren = item.items && Boolean(item.items.length);\n      return React.createElement(\"li\", {\n        key: item.key || item.label,\n        className: _this.props.cx('item', item.isRefined && 'item--selected', item.noRefinement && 'item--noRefinement', itemHasChildren && 'item--parent')\n      }, _this.props.renderItem(item, resetQuery), itemHasChildren && React.createElement(\"ul\", {\n        className: _this.props.cx('list', 'list--child')\n      }, item.items.slice(0, _this.getLimit()).map(function (child) {\n        return _this.renderItem(child, item);\n      })));\n    });\n\n    _this.state = {\n      extended: false,\n      query: ''\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"renderShowMore\",\n    value: function renderShowMore() {\n      var _this$props2 = this.props,\n          showMore = _this$props2.showMore,\n          translate = _this$props2.translate,\n          cx = _this$props2.cx;\n      var extended = this.state.extended;\n      var disabled = this.props.limit >= this.props.items.length;\n\n      if (!showMore) {\n        return null;\n      }\n\n      return React.createElement(\"button\", {\n        disabled: disabled,\n        className: cx('showMore', disabled && 'showMore--disabled'),\n        onClick: this.onShowMoreClick\n      }, translate('showMore', extended));\n    }\n  }, {\n    key: \"renderSearchBox\",\n    value: function renderSearchBox() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          cx = _this$props3.cx,\n          searchForItems = _this$props3.searchForItems,\n          isFromSearch = _this$props3.isFromSearch,\n          translate = _this$props3.translate,\n          items = _this$props3.items,\n          selectItem = _this$props3.selectItem;\n      var noResults = items.length === 0 && this.state.query !== '' ? React.createElement(\"div\", {\n        className: cx('noResults')\n      }, translate('noResults')) : null;\n      return React.createElement(\"div\", {\n        className: cx('searchBox')\n      }, React.createElement(SearchBox, {\n        currentRefinement: this.state.query,\n        refine: function refine(value) {\n          _this2.setState({\n            query: value\n          });\n\n          searchForItems(value);\n        },\n        focusShortcuts: [],\n        translate: translate,\n        onSubmit: function onSubmit(e) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (isFromSearch) {\n            selectItem(items[0], _this2.resetQuery);\n          }\n        }\n      }), noResults);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          cx = _this$props4.cx,\n          items = _this$props4.items,\n          className = _this$props4.className,\n          searchable = _this$props4.searchable,\n          canRefine = _this$props4.canRefine;\n      var searchBox = searchable ? this.renderSearchBox() : null;\n      var rootClassName = classNames(cx('', !canRefine && '-noRefinement'), className);\n\n      if (items.length === 0) {\n        return React.createElement(\"div\", {\n          className: rootClassName\n        }, searchBox);\n      } // Always limit the number of items we show on screen, since the actual\n      // number of retrieved items might vary with the `maxValuesPerFacet` config\n      // option.\n\n\n      return React.createElement(\"div\", {\n        className: rootClassName\n      }, searchBox, React.createElement(\"ul\", {\n        className: cx('list', !canRefine && 'list--noRefinement')\n      }, items.slice(0, this.getLimit()).map(function (item) {\n        return _this3.renderItem(item, _this3.resetQuery);\n      })), this.renderShowMore());\n    }\n  }]);\n\n  return List;\n}(Component);\n\n_defineProperty(List, \"propTypes\", {\n  cx: PropTypes.func.isRequired,\n  // Only required with showMore.\n  translate: PropTypes.func,\n  items: itemsPropType,\n  renderItem: PropTypes.func.isRequired,\n  selectItem: PropTypes.func,\n  className: PropTypes.string,\n  showMore: PropTypes.bool,\n  limit: PropTypes.number,\n  showMoreLimit: PropTypes.number,\n  show: PropTypes.func,\n  searchForItems: PropTypes.func,\n  searchable: PropTypes.bool,\n  isFromSearch: PropTypes.bool,\n  canRefine: PropTypes.bool\n});\n\n_defineProperty(List, \"defaultProps\", {\n  className: '',\n  isFromSearch: false\n});\n\nexport default List;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { translatable } from 'react-instantsearch-core';\nimport { createClassNames } from '../core/utils';\nimport Highlight from '../widgets/Highlight';\nimport List from './List';\nvar cx = createClassNames('RefinementList');\n\nvar RefinementList = /*#__PURE__*/function (_Component) {\n  _inherits(RefinementList, _Component);\n\n  function RefinementList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RefinementList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RefinementList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      query: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectItem\", function (item, resetQuery) {\n      resetQuery();\n\n      _this.props.refine(item.value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItem\", function (item, resetQuery) {\n      var label = _this.props.isFromSearch ? React.createElement(Highlight, {\n        attribute: \"label\",\n        hit: item\n      }) : item.label;\n      return React.createElement(\"label\", {\n        className: cx('label')\n      }, React.createElement(\"input\", {\n        className: cx('checkbox'),\n        type: \"checkbox\",\n        checked: item.isRefined,\n        onChange: function onChange() {\n          return _this.selectItem(item, resetQuery);\n        }\n      }), React.createElement(\"span\", {\n        className: cx('labelText')\n      }, label), ' ', React.createElement(\"span\", {\n        className: cx('count')\n      }, item.count.toLocaleString()));\n    });\n\n    return _this;\n  }\n\n  _createClass(RefinementList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          translate = _this$props.translate,\n          items = _this$props.items,\n          showMore = _this$props.showMore,\n          limit = _this$props.limit,\n          showMoreLimit = _this$props.showMoreLimit,\n          isFromSearch = _this$props.isFromSearch,\n          searchForItems = _this$props.searchForItems,\n          searchable = _this$props.searchable,\n          canRefine = _this$props.canRefine,\n          className = _this$props.className;\n      return React.createElement(List, {\n        renderItem: this.renderItem,\n        selectItem: this.selectItem,\n        cx: cx,\n        translate: translate,\n        items: items,\n        showMore: showMore,\n        limit: limit,\n        showMoreLimit: showMoreLimit,\n        isFromSearch: isFromSearch,\n        searchForItems: searchForItems,\n        searchable: searchable,\n        canRefine: canRefine,\n        className: className,\n        query: this.state.query\n      });\n    }\n  }]);\n\n  return RefinementList;\n}(Component);\n\n_defineProperty(RefinementList, \"propTypes\", {\n  translate: PropTypes.func.isRequired,\n  refine: PropTypes.func.isRequired,\n  searchForItems: PropTypes.func.isRequired,\n  searchable: PropTypes.bool,\n  createURL: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    count: PropTypes.number.isRequired,\n    isRefined: PropTypes.bool.isRequired\n  })),\n  isFromSearch: PropTypes.bool.isRequired,\n  canRefine: PropTypes.bool.isRequired,\n  showMore: PropTypes.bool,\n  limit: PropTypes.number,\n  showMoreLimit: PropTypes.number,\n  transformItems: PropTypes.func,\n  className: PropTypes.string\n});\n\n_defineProperty(RefinementList, \"defaultProps\", {\n  className: ''\n});\n\nexport default translatable({\n  showMore: function showMore(extended) {\n    return extended ? 'Show less' : 'Show more';\n  },\n  noResults: 'No results',\n  submit: null,\n  reset: null,\n  resetTitle: 'Clear the search query.',\n  submitTitle: 'Submit your search query.',\n  placeholder: 'Search here…'\n})(RefinementList);","import React from 'react';\nimport { connectRefinementList } from 'react-instantsearch-core';\nimport PanelCallbackHandler from '../components/PanelCallbackHandler';\nimport RefinementList from '../components/RefinementList';\n/**\n * The RefinementList component displays a list that let the end user choose multiple values for a specific facet.\n * @name RefinementList\n * @kind widget\n * @propType {string} attribute - the name of the attribute in the record\n * @propType {boolean} [searchable=false] - true if the component should display an input to search for facet values. <br> In order to make this feature work, you need to make the attribute searchable [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting) or [the dashboard](https://www.algolia.com/explorer/display/).\n * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.\n * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items\n * @propType {number} [limit=10] - the minimum number of displayed items\n * @propType {number} [showMoreLimit=20] - the maximum number of displayed items. Only used when showMore is set to `true`\n * @propType {string[]} [defaultRefinement] - the values of the items selected by default\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @themeKey ais-RefinementList - the root div of the widget\n * @themeKey ais-RefinementList--noRefinement - the root div of the widget when there is no refinement\n * @themeKey ais-RefinementList-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.\n * @themeKey ais-RefinementList-list - the list of refinement items\n * @themeKey ais-RefinementList-item - the refinement list item\n * @themeKey ais-RefinementList-item--selected - the refinement selected list item\n * @themeKey ais-RefinementList-label - the label of each refinement item\n * @themeKey ais-RefinementList-checkbox - the checkbox input of each refinement item\n * @themeKey ais-RefinementList-labelText - the label text of each refinement item\n * @themeKey ais-RefinementList-count - the count of values for each item\n * @themeKey ais-RefinementList-noResults - the div displayed when there are no results\n * @themeKey ais-RefinementList-showMore - the button used to display more categories\n * @themeKey ais-RefinementList-showMore--disabled - the disabled button used to display more categories\n * @translationkey showMore - The label of the show more button. Accepts one parameters, a boolean that is true if the values are expanded\n * @translationkey noResults - The label of the no results text when no search for facet values results are found.\n * @requirements The attribute passed to the `attribute` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * If you are using the `searchable` prop, you'll also need to make the attribute searchable using\n * the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, RefinementList } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <RefinementList attribute=\"brand\" />\n *   </InstantSearch>\n * );\n */\n\nvar RefinementListWidget = function RefinementListWidget(props) {\n  return React.createElement(PanelCallbackHandler, props, React.createElement(RefinementList, props));\n};\n\nexport default connectRefinementList(RefinementListWidget);","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nimport { addAbsolutePositions, addQueryID } from '../core/utils';\n/**\n * connectHits connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n *\n * **Warning:** you will need to use the **objectID** property available on every hit as a key\n * when iterating over them. This will ensure you have the best possible UI experience\n * especially on slow networks.\n * @name connectHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const CustomHits = connectHits(({ hits }) => (\n *   <div>\n *     {hits.map(hit =>\n *       <p key={hit.objectID}>\n *         <Highlight attribute=\"name\" hit={hit} />\n *       </p>\n *     )}\n *   </div>\n * ));\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CustomHits />\n *   </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: []\n      };\n    }\n\n    var hitsWithPositions = addAbsolutePositions(results.hits, results.hitsPerPage, results.page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    return {\n      hits: hitsWithPositionsAndQueryID\n    };\n  },\n\n  /**\n   * Hits needs to be considered as a widget to trigger a search,\n   * even if no other widgets are used.\n   *\n   * To be considered as a widget you need either:\n   * - getSearchParameters\n   * - getMetadata\n   * - transitionState\n   *\n   * See: createConnector.tsx\n   */\n  getSearchParameters: function getSearchParameters(searchParameters) {\n    return searchParameters;\n  }\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('Hits');\n\nvar DefaultHitComponent = function DefaultHitComponent(props) {\n  return React.createElement(\"div\", {\n    style: {\n      borderBottom: '1px solid #bbb',\n      paddingBottom: '5px',\n      marginBottom: '5px',\n      wordBreak: 'break-all'\n    }\n  }, JSON.stringify(props).slice(0, 100), \"...\");\n};\n\nvar Hits = function Hits(_ref) {\n  var hits = _ref.hits,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$hitComponent = _ref.hitComponent,\n      HitComponent = _ref$hitComponent === void 0 ? DefaultHitComponent : _ref$hitComponent;\n  return React.createElement(\"div\", {\n    className: classNames(cx(''), className)\n  }, React.createElement(\"ul\", {\n    className: cx('list')\n  }, hits.map(function (hit) {\n    return React.createElement(\"li\", {\n      className: cx('item'),\n      key: hit.objectID\n    }, React.createElement(HitComponent, {\n      hit: hit\n    }));\n  })));\n};\n\nvar HitPropTypes = PropTypes.shape({\n  objectID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n});\nexport default Hits;","import { connectHits } from 'react-instantsearch-core';\nimport Hits from '../components/Hits';\n/**\n * Displays a list of hits.\n *\n * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).\n *\n * @name Hits\n * @kind widget\n * @propType {Component} [hitComponent] - Component used for rendering each hit from\n *   the results. If it is not provided the rendering defaults to displaying the\n *   hit in its JSON form. The component will be called with a `hit` prop.\n * @themeKey ais-Hits - the root div of the widget\n * @themeKey ais-Hits-list - the list of results\n * @themeKey ais-Hits-item - the hit list item\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHits(Hits);","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\n/**\n * The `connectStateResults` connector provides a way to access the `searchState` and the `searchResults`\n * of InstantSearch.\n * For instance this connector allows you to create results/noResults or query/noQuery pages.\n * @name connectStateResults\n * @kind connector\n * @providedPropType {object} searchState - The search state of the instant search component. <br/><br/> See: [Search state structure](https://community.algolia.com/react-instantsearch/guide/Search_state.html)\n * @providedPropType {object} searchResults - The search results. <br/><br/> In case of multiple indices: if used under `<Index>`, results will be those of the corresponding index otherwise it'll be those of the root index  See: [Search results structure](https://community.algolia.com/algoliasearch-helper-js/reference.html#searchresults)\n * @providedPropType {object} allSearchResults - In case of multiple indices you can retrieve all the results\n * @providedPropType {string} error - If the search failed, the error will be logged here.\n * @providedPropType {boolean} searching - If there is a search in progress.\n * @providedPropType {boolean} isSearchStalled - Flag that indicates if React InstantSearch has detected that searches are stalled.\n * @providedPropType {boolean} searchingForFacetValues - If there is a search in a list in progress.\n * @providedPropType {object} props - component props.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Content = connectStateResults(({ searchState, searchResults }) => {\n *   const hasResults = searchResults && searchResults.nbHits !== 0;\n *\n *    return (\n *      <div>\n *        <div hidden={!hasResults}>\n *          <Hits />\n *        </div>\n *        <div hidden={hasResults}>\n *          <div>No results has been found for {searchState.query}</div>\n *        </div>\n *      </div>\n *    );\n * });\n *\n * const App = () => (\n *   <InstantSearch\n *      searchClient={searchClient}\n *      indexName=\"instant_search\"\n *    >\n *      <SearchBox />\n *      <Content />\n *    </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaStateResults',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      searchState: searchState,\n      searchResults: results,\n      allSearchResults: searchResults.results,\n      searching: searchResults.searching,\n      isSearchStalled: searchResults.isSearchStalled,\n      error: searchResults.error,\n      searchingForFacetValues: searchResults.searchingForFacetValues,\n      props: props\n    };\n  }\n});","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { connectRefinementList } from \"react-instantsearch-dom\";\nimport { rem } from \"@src/theme\";\nimport * as _ from \"lodash\";\nimport { useState } from \"react\";\nconst RefinementList = ({ items, currentRefinement, refine }) => {\n  const [active, setActive] = useState(\"All\");\n  const refinements = [\n    \"Insight\",\n    \"Statistic\",\n    \"Report\",\n    \"Academic article\",\n    \"Infographic\",\n    \"Tool\",\n    \"Video\",\n  ];\n\n  return (\n    <ul\n      sx={{\n        display: \"flex\",\n        flexWrap: [\"nowrap\", null, \"wrap\"],\n        fontSize: [rem(18), null, rem(18)],\n        li: {\n          fontWeight: 600,\n          mr: [rem(20), null, rem(30)],\n          whiteSpace: \"nowrap\",\n          \"&:last-child\": {\n            pr: \"4%\",\n          },\n        },\n        overflowX: \"scroll\",\n        \"&::-webkit-scrollbar\": {\n          display: \"none\",\n        },\n        \"-ms-overflow-style\": [\"none\"],\n        \" scrollbar-width\": [\"none\"],\n        a: {\n          display: \"inline-block\",\n          borderBottom: \"2px solid transparent\",\n          \"&:hover\": {\n            borderBottomColor: \"inherit\",\n          },\n        },\n      }}\n    >\n      <li key=\"all\">\n        <a\n          href=\"#\"\n          sx={{\n            color: active === \"All\" ? \"csiDarkGrey\" : \"#616161\",\n            fontWeight: active === \"All\" ? \"bold\" : \"\",\n            borderBottom:\n              active === \"All\" ? \"2px solid #616161!important\" : \"none\",\n          }}\n          onClick={(event) => {\n            event.preventDefault();\n            setActive(\"All\");\n            refine(\"\");\n          }}\n        >\n          All\n        </a>\n      </li>\n\n      {refinements.map((item) => (\n        <li key={item}>\n          <a\n            href=\"#\"\n            sx={{\n              fontWeight: active === item ? \"bold\" : \"\",\n              borderBottom:\n                active === item ? \"2px solid #616161!important\" : \"none\",\n              color: active === item ? \"csiDarkGrey\" : \"#616161\",\n            }}\n            onClick={(event) => {\n              event.preventDefault();\n\n              refine(item);\n              setActive(item);\n            }}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst CustomRefinementList = connectRefinementList(RefinementList);\n\nexport default CustomRefinementList;\n","import React from \"react\";\n\nconst EyeOff = () => (\n  <svg\n    width=\"139\"\n    height=\"140\"\n    viewBox=\"0 0 139 140\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M81.7782 82.3667C80.1875 84.0861 78.2693 85.4651 76.138 86.4216C74.0067 87.3781 71.7059 87.8924 69.3729 87.9339C67.04 87.9753 64.7227 87.5431 62.5592 86.6629C60.3957 85.7828 58.4303 84.4727 56.7804 82.811C55.1305 81.1492 53.8299 79.1697 52.956 76.9907C52.0821 74.8116 51.653 72.4776 51.6941 70.1279C51.7353 67.7781 52.2459 65.4608 53.1956 63.3142C54.1452 61.1675 55.5144 59.2355 57.2215 57.6334M103.902 104.65C94.002 112.251 81.9467 116.462 69.4998 116.667C28.9582 116.667 5.7915 70.0001 5.7915 70.0001C12.9957 56.4778 22.9877 44.6636 35.0973 35.3501L103.902 104.65ZM57.3373 24.7334C61.3239 23.7935 65.4055 23.3237 69.4998 23.3334C110.042 23.3334 133.208 70.0001 133.208 70.0001C129.693 76.6244 125.5 82.861 120.698 88.6084L57.3373 24.7334Z\"\n      stroke=\"#CED3DD\"\n      stroke-width=\"2\"\n    />\n    <path\n      d=\"M5.7915 5.83325L133.208 134.167\"\n      stroke=\"#CED3DD\"\n      stroke-width=\"2\"\n    />\n  </svg>\n);\n\nexport default EyeOff;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport Container from \"@components/Container\";\nimport { rem } from \"@src/theme\";\nimport Search from \"@components/SearchBox\";\nimport ArrowBg from \"@components/ArrowBg\";\nimport BackBtn from \"@components/BackBtn\";\ninterface ComponentProps {\n  title: string;\n  description?: string;\n  isSearch?: Boolean;\n  defaultQuery?: string;\n  bgType?: string;\n}\n\nconst CollectionHeader = ({\n  title,\n  description,\n  isSearch,\n  defaultQuery,\n  bgType,\n}: ComponentProps) => (\n  <div\n    sx={{\n      bg: \"csiLightGrey\",\n    }}\n  >\n    <Container>\n      <ArrowBg type={bgType}>\n        <div\n          sx={{\n            display: isSearch ? \"flex\" : \"block\",\n            alignItems: [\"flex-start\", null, \"center\"],\n            justifyContent: \"space-between\",\n            flexDirection: [\"column\", null, \"row\"],\n            pb: [rem(20), null, rem(20)],\n          }}\n        >\n          <div>\n            <div\n              sx={{\n                mb: rem(20),\n              }}\n            >\n              <BackBtn />\n            </div>\n            <h1\n              sx={{\n                variant: \"typography.headingXXL\",\n                mb: 0,\n              }}\n            >\n              {title}\n            </h1>\n            {description && (\n              <p\n                sx={{\n                  mb: [rem(16), null, rem(24)],\n                  fontSize: [rem(16), null, rem(22)],\n                  lineHeight: 1.3,\n                }}\n              >\n                {\" \"}\n                {description}\n              </p>\n            )}\n          </div>\n          <div\n            sx={{\n              width: [\"100%\", null, \"auto\"],\n            }}\n          >\n            {isSearch && <Search defaultRefinement={defaultQuery} />}\n          </div>\n        </div>\n      </ArrowBg>\n    </Container>\n  </div>\n);\nexport default CollectionHeader;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport {\n  InstantSearch,\n  Hits,\n  RefinementList,\n  connectStateResults,\n} from \"react-instantsearch-dom\";\nimport { rem } from \"@src/theme\";\nimport { Link } from \"gatsby\";\nimport TypeRefinementList from \"@components/TypeRefinementList\";\nimport Container from \"@components/Container\";\nimport ScrollContainer from \"@components/ScrollContainer\";\nimport ResourceCard from \"@components/ResourceCard\";\nimport EyeOff from \"@src/components/icons/eye\";\nimport CollectionHeader from \"@src/components/CollectionHeader\";\nimport Layout from \"@src/components/Layout\";\nconst searchClient = algoliasearch(\n  \"ED9HZMT8Z4\",\n  \"65441d4adde5fd0d03a0b683d232262a\"\n);\n\ninterface ComponentProps {\n  defaultRefinement?: string[];\n  refinementType?: string;\n  defaultQuery?: string;\n  isSearch: Boolean;\n  heading: string;\n  description?: string;\n}\nexport default function({\n  defaultRefinement,\n  isSearch,\n  heading,\n  description,\n  refinementType,\n  defaultQuery,\n}: ComponentProps) {\n  return (\n    <Layout sticky={true} title={heading}>\n      <InstantSearch\n        searchClient={searchClient}\n        indexName={process.env.ALGOLIA_INDEX || \"resources-csi-01-prod\"}\n      >\n        <CollectionHeader\n          defaultQuery={defaultQuery}\n          title={heading}\n          description={description}\n          isSearch={isSearch}\n          bgType={isSearch ? \"search\" : \"user\"}\n        />\n\n        <div\n          sx={{\n            py: [rem(30), null, rem(50)],\n          }}\n        >\n          <ScrollContainer>\n            <TypeRefinementList attribute=\"type\" operator=\"and\" />\n          </ScrollContainer>\n        </div>\n\n        {refinementType && (\n          <div\n            sx={{\n              display: \"none\",\n            }}\n          >\n            <RefinementList\n              attribute={refinementType}\n              defaultRefinement={defaultRefinement}\n            />\n            <RefinementList attribute=\"enabled\" defaultRefinement={[true]} />\n          </div>\n        )}\n\n        <Container>\n          <Results>\n            <section\n              sx={{\n                \".ais-Hits-list\": {\n                  display: \"grid\",\n                  gridTemplateColumns: [\n                    \"repeat(1,1fr)\",\n                    \"repeat(2,1fr)\",\n                    \"repeat(3,1fr)\",\n                  ],\n                  gridColumnGap: [\"0.85rem\", null, \"3.00rem\"],\n                  gridRowGap: [\"0.85rem\", null, \"3.00rem\"],\n                },\n                pb: rem(80),\n              }}\n            >\n              <Hits hitComponent={ResourceCard} />\n            </section>\n          </Results>\n        </Container>\n      </InstantSearch>\n    </Layout>\n  );\n}\n\nconst Results = connectStateResults(\n  ({ searchResults, children, searchState }) => {\n    return searchResults && searchResults.nbHits !== 0 ? (\n      children\n    ) : !searchResults && !Object.keys(searchState).length ? null : (\n      <section\n        sx={{\n          textAlign: \"center\",\n          pb: rem(40),\n        }}\n      >\n        <EyeOff />\n        <h1\n          sx={{\n            mt: rem(10),\n            mb: rem(10),\n            fontSize: [rem(20), null, rem(25)],\n          }}\n        >\n          We can't SEE any matching evidence\n        </h1>\n        <p\n          sx={{\n            mt: 0,\n          }}\n        >\n          Try{\" \"}\n          <Link\n            to=\"/\"\n            sx={{\n              textDecoration: \"underline\",\n              fontWeight: 600,\n            }}\n          >\n            searching\n          </Link>{\" \"}\n          for other research or insights.\n        </p>\n      </section>\n    );\n  }\n);\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;","'use strict'; // NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\n\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] === undefined) {\n        return;\n      }\n\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\n\nvar find = require('../functions/find');\n\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] && state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';\n\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);\n\n    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, hierarchicalFacetRefinement);\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null,\n      // root level, no count\n      isRefined: true,\n      // root level, always refined\n      path: null,\n      // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, currentRefinement) {\n  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    } // we found a refined parent, let's add current level data under it\n\n\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n      var picked = Object.keys(hierarchicalFacetResult.data).map(function (facetValue) {\n        return [facetValue, hierarchicalFacetResult.data[facetValue]];\n      }).filter(function (tuple) {\n        var facetValue = tuple[0];\n        return onlyMatchingTree(facetValue, parent.path || hierarchicalRootPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);\n      });\n      parent.data = orderBy(picked.map(function (tuple) {\n        var facetValue = tuple[0];\n        var facetCount = tuple[1];\n        return format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, hierarchicalFacetResult.exhaustive);\n      }), sortBy[0], sortBy[1]);\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(facetValue, parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (hierarchicalRootPath && (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {\n    return false;\n  } // we always want root levels (only when there is no prefix path)\n\n\n  return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 || // if there is a rootPath, being root level mean 1 level under rootPath\n  hierarchicalRootPath && facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 || // if current refinement is a root level and current facetValue is a root level,\n  // keep the facetValue\n  facetValue.indexOf(hierarchicalSeparator) === -1 && currentRefinement.indexOf(hierarchicalSeparator) === -1 || // currentRefinement is a child of the facet value\n  currentRefinement.indexOf(facetValue) === 0 || // facetValue is a child of the current parent, add it\n  facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 && (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);\n}\n\nfunction format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, exhaustive) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;","'use strict'; // @MAJOR can be replaced by native Array#findIndex when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};","'use strict'; // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar orderBy = require('../functions/orderBy');\n\nvar compact = require('../functions/compact');\n\nvar find = require('../functions/find');\n\nvar findIndex = require('../functions/findIndex');\n\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\n\n\nfunction getIndices(attributes) {\n  var indices = {};\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\n\n\nfunction findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(hierarchicalFacet) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n/*eslint-disable */\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n\n/*eslint-enable */\n\n\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n  this._rawResults = results;\n  var self = this; // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n\n  Object.keys(mainSubResponse).forEach(function (key) {\n    self[key] = mainSubResponse[key];\n  });\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined ? sum : sum + result.processingTimeMS;\n  }, 0);\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.facets = [];\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1; // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(state.hierarchicalFacets, facetKey);\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  }); // Make sure we do not keep holes within the hierarchical facets\n\n  this.hierarchicalFacets = compact(this.hierarchicalFacets); // aggregate the refined disjunctive facets\n\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet); // There should be only item in facets.\n\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        }); // previous refinements and no results so not able to find it\n\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge({}, self.hierarchicalFacets[position][attributeIndex].data, facetResults);\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] && state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  }); // if we have some root level values for hierarchical facets, merge them\n\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n        return f.attribute === dfacet;\n      }); // previous refinements and no results so not able to find it\n\n      if (attributeIndex === -1) {\n        return;\n      } // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n\n\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(defaultData, facetResults, self.hierarchicalFacets[position][attributeIndex].data);\n    });\n    nextDisjunctiveResult++;\n  }); // add the excludes\n\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || {\n        name: facetName\n      };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n  /**\n   * @type {Array}\n   */\n\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n  /**\n   * @type {Array}\n   */\n\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n  this._state = state;\n}\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\n\n\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) || find(this.disjunctiveFacets, predicate) || find(this.hierarchicalFacets, predicate);\n};\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\n\n\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n    return Object.keys(facet.data).map(function (name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\n\n\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {\n    data: sortedChildren\n  });\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\n\n\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT\n  });\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n\n  throw new Error('options.sortBy is optional but if defined it must be ' + 'either an array of string (predicates) or a sorting function');\n};\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\n\n\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\n\n\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\n\n\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  var results = this;\n  var res = [];\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n  state.tagRefinements.forEach(function (name) {\n    res.push({\n      type: 'tag',\n      attributeName: '_tags',\n      name: name\n    });\n  });\n  return res;\n};\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet = intermediateFacet && find(intermediateFacet.data, function (f) {\n      return f.name === part;\n    });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n  var count = facet && facet.count || 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  var path = facet && facet.path || '';\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (!othIsNull && value > other || valIsNull && othIsDefined || !valIsDefined) {\n      return 1;\n    }\n\n    if (!valIsNull && value < other || othIsNull && valIsDefined || !othIsDefined) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\n\n\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n\n        return res;\n      }\n    } // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  });\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;"],"sourceRoot":""}