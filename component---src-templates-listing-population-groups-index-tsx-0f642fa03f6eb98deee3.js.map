{"version":3,"sources":["webpack:///./src/templates/listing/population-groups/index.tsx","webpack:///./src/components/CollectionListingContainer/index.tsx"],"names":["PopulationGroups","props","category","data","craft","Fragment","metadata","metaTitle","title","location","listing","Impacts","defaultState","type","description","useEffect","updates","defaultRefinements","setRefinements","useState","refinementType","defaultRefinement","isSearch","heading"],"mappings":"8FAAA,oEAyBeA,UAnBU,SAACC,GAAU,IAC1BC,EAAaD,EAAME,KAAKC,MAAxBF,SAER,OACE,YAAC,IAAMG,SAAP,KACE,YAAC,IAAD,CACEC,SAAU,CACRC,UAAWL,EAASM,OAEtBC,SAAUR,EAAMQ,WAElB,YAAC,IAAD,CACEP,SAAUA,EACVQ,QAAQ,wB,kCCnBhB,wCA2CeC,IAhCC,SAAC,GAA0C,IAAxCT,EAAwC,EAAxCA,SAAUQ,EAA8B,EAA9BA,QACvBE,EAAe,CACjBC,KAAM,IAGRD,EAAaF,GAAW,GALiC,IAOjDF,EAAuBN,EAAvBM,MAAOM,EAAgBZ,EAAhBY,YAEfC,qBAAU,WACR,GAAIb,EAAQ,MAAW,CACrB,IAAIc,EAAU,OAAH,UACNC,GAELD,EAAQN,GAAW,CAACR,EAAQ,OAC5BgB,EAAeF,MAEhB,IAjBsD,MAmBZG,mBAASP,GAA/CK,EAnBkD,KAmB9BC,EAnB8B,KAqBzD,OACE,YAAC,IAAD,CACEE,eAAgBV,EAChBW,kBAAmBJ,EAAmBP,GACtCY,UAAU,EACVC,QAASf,EACTM,YAAaA,GAA4B","file":"component---src-templates-listing-population-groups-index-tsx-0f642fa03f6eb98deee3.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { graphql } from \"gatsby\";\nimport CollectionListingContainer from \"@components/CollectionListingContainer\";\nimport SEO from \"@components/seo\";\nimport React from \"react\";\nconst PopulationGroups = (props) => {\n  const { category } = props.data.craft;\n\n  return (\n    <React.Fragment>\n      <SEO\n        metadata={{\n          metaTitle: category.title,\n        }}\n        location={props.location}\n      />\n      <CollectionListingContainer\n        category={category}\n        listing=\"populationGroups\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PopulationGroups;\n\nexport const query = graphql`\n  query PopulationGroupsQuery($id: Craft_QueryArgument) {\n    craft {\n      category(id: [$id]) {\n        ... on Craft_populationGroups_Category {\n          title\n        }\n      }\n    }\n  }\n`;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\n\nimport { useEffect, useState } from \"react\";\nimport InstantSearch from \"@components/InstantSearch\";\n\ninterface ComponentProps {\n  category: any;\n  listing: string;\n}\n\nconst Impacts = ({ category, listing }: ComponentProps) => {\n  let defaultState = {\n    type: [],\n  };\n\n  defaultState[listing] = [];\n\n  const { title, description } = category;\n\n  useEffect(() => {\n    if (category[\"title\"]) {\n      let updates = {\n        ...defaultRefinements,\n      };\n      updates[listing] = [category[\"title\"]];\n      setRefinements(updates);\n    }\n  }, []);\n\n  const [defaultRefinements, setRefinements] = useState(defaultState);\n\n  return (\n    <InstantSearch\n      refinementType={listing}\n      defaultRefinement={defaultRefinements[listing]}\n      isSearch={false}\n      heading={title}\n      description={description ? description : \"\"}\n    />\n  );\n};\n\nexport default Impacts;\n"],"sourceRoot":""}